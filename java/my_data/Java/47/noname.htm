<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML xmlns:o = "urn:schemas-microsoft-com:office:office" xmlns:dt = 
"uuid:C2F41010-65B3-11d1-A29F-00AA00C14882">
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>Java 实现 POS 打印机无驱打印</title>
</HEAD>

<BODY lang=zh-CN>
<!--StartFragment--><!--StartFragment-->
<DIV style="DIRECTION: ltr">
  <TABLE 
style="BORDER-RIGHT: #a3a3a3 0pt solid; BORDER-TOP: #a3a3a3 0pt solid; BORDER-LEFT: #a3a3a3 0pt solid; DIRECTION: ltr; BORDER-BOTTOM: #a3a3a3 0pt solid; BORDER-COLLAPSE: collapse" 
cellSpacing=0 cellPadding=0 border=0 valign="top">
    <TBODY>
      <TR>
        <TD 
style="BORDER-TOP-WIDTH: 0pt; PADDING-RIGHT: 4pt; PADDING-LEFT: 4pt; BORDER-LEFT-WIDTH: 0pt; BORDER-BOTTOM-WIDTH: 0pt; PADDING-BOTTOM: 4pt; VERTICAL-ALIGN: top; WIDTH: 3.998in; PADDING-TOP: 4pt; BORDER-RIGHT-WIDTH: 0pt"><UL 
style="MARGIN-TOP: 0in; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 0.02in; DIRECTION: ltr; unicode-bidi: embed">
            <P 
style="FONT-SIZE: 18.75pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: arial">Java 
              实现 POS 打印机无驱打印</P>
            <P style="MARGIN: 0in"><IMG height=6 src="clip_image001.gif" 
width=1></P>
        </UL></TD>
        <TD 
style="BORDER-TOP-WIDTH: 0pt; PADDING-RIGHT: 4pt; PADDING-LEFT: 4pt; BORDER-LEFT-WIDTH: 0pt; BORDER-BOTTOM-WIDTH: 0pt; PADDING-BOTTOM: 4pt; VERTICAL-ALIGN: top; WIDTH: 0.686in; PADDING-TOP: 4pt; BORDER-RIGHT-WIDTH: 0pt"><P 
style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P></TD>
      </TR>
    </TBODY>
  </TABLE>
</DIV>
<DIV style="DIRECTION: ltr">
  <TABLE 
style="BORDER-RIGHT: #a3a3a3 0pt solid; BORDER-TOP: #a3a3a3 0pt solid; BORDER-LEFT: #a3a3a3 0pt solid; DIRECTION: ltr; BORDER-BOTTOM: #a3a3a3 0pt solid; BORDER-COLLAPSE: collapse" 
cellSpacing=0 cellPadding=0 border=0 valign="top">
    <TBODY>
      <TR>
        <TD 
style="BORDER-TOP-WIDTH: 0pt; PADDING-RIGHT: 4pt; PADDING-LEFT: 4pt; BORDER-LEFT-WIDTH: 0pt; BORDER-BOTTOM-WIDTH: 0pt; PADDING-BOTTOM: 4pt; VERTICAL-ALIGN: top; WIDTH: 0.667in; PADDING-TOP: 4pt; BORDER-RIGHT-WIDTH: 0pt"><P style="MARGIN: 0in"><IMG height=1 src="clip_image001.gif" width=10></P></TD>
        <TD 
style="BORDER-TOP-WIDTH: 0pt; PADDING-RIGHT: 4pt; PADDING-LEFT: 4pt; BORDER-LEFT-WIDTH: 0pt; BORDER-BOTTOM-WIDTH: 0pt; PADDING-BOTTOM: 4pt; VERTICAL-ALIGN: top; WIDTH: 10.136in; PADDING-TOP: 4pt; BORDER-RIGHT-WIDTH: 0pt"><UL 
style="MARGIN-TOP: 0in; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 0.02in; DIRECTION: ltr; unicode-bidi: embed">
            <P style="MARGIN: 0in"><A 
href="http://www.ibm.com/developerworks/cn/java/j-lo-pos/#author"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Arial">于 丙超</SPAN></A><SPAN 
style="FONT-SIZE: 9pt; COLOR: black; FONT-FAMILY: Arial"> (</SPAN><A 
href="mailto:44116178@qq.com%3Fsubject=Java%20实现%20POS%20打印机无驱打印"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Arial">44116178@qq.com</SPAN></A><SPAN 
style="FONT-SIZE: 9pt; COLOR: black; FONT-FAMILY: Arial">), 总经理, 
              北京周服科技有限公司</SPAN></P>
            <P style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">2009 年 
              6 月 29 日</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.375in; COLOR: black; FONT-FAMILY: Arial">Java 
              对硬件的控制一直以来都不是其强项，特别是打印，Java 很难实现对 POS 打印机的直接控制，并判断打印是否成功。本文将探讨一种方法，讲述如何使用 Java 
              技术与网口的 POS 打印机连接，通过 Socket 
              技术直接将爱普生指令写入打印机端口，打印出相应的内容或者条形码，并实现字体的放大，打印完毕自动走纸等功能。</P>
            <P 
style="FONT-WEIGHT: bold; FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">行业需求</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">我们是一家专业做酒店餐饮软件的公司，餐饮软件一个重要的功能就是后厨打印问题，前台点菜完毕，后厨立刻打印出单子，这样就减少人工递单的麻烦，节省时间，提高翻台率。这种信息化解决方案对打印技术要求很高，理论上最好 
              100% 
              不丢单，也就是每次点菜后厨都会相应出单子，但是实际上行不通，为什么呢？因为网线、打印机、网卡等都有可能有问题，别说打印机等硬件因为厨房油烟问题损坏，我们甚至碰到过网线被老鼠咬断的情况，总之硬件网络故障防不胜防，所以只能退而求其次，就是有问题不可怕，程序能够判断是否出了问题，并能给出提示，便于服务员处理，及时补单。</P>
            <P style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">如果我们用安装 
              Windows 
              驱动的方法来实现后厨打印，那么肯定是不行的，因为我们只能单向向驱动程序抛包，不能从驱动程序获得任何返回值，没有办法了解是否打印成功。而且更为严重的是，有时候因为后厨打印机过多，Windows 
              驱动甚至会因为网络堵塞自作主张将包丢弃，没有任何提示。</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">这在行业应用中是不行的，会给用户带来损失，所以想到了绕过 
              Windows 驱动，直接写端口的方法。</P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=1 src="clip_image002.gif" width=100></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=6 src="clip_image001.gif" width=8></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P 
style="FONT-WEIGHT: bold; FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">无驱打印的可行性</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">所谓直接写端口的方法，就是不用安装打印机驱动，不使用 
              PrinterJob 获得打印机的名字的方法进行打印。</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">众所周知，之所以安装打印机驱动，一个重要的原因就是打印机厂商千差万别，不同的打印机往往都有各自的驱动，很难实现万能驱动。但是，在 
              POS 打印机行业却有一条捷径，就是现在市面上的 POS 
              打印机基本上都支持爱普生指令，也就是说，只要将程序和打印机联通，直接向端口里面写爱普生指令就可以控制打印机。</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">打印机接受到爱普生指令以后，自行进行解析，然后打印出相应的内容。</P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=1 src="clip_image002.gif" width=100></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=6 src="clip_image001.gif" width=8></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P 
style="FONT-WEIGHT: bold; FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">爱普生指令</P>
            <P style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">日本的 
              EPSON 公司在目前的 POS 打印机市场，尤其是针式打印机市场占有很大一部分份额。它所推行的 ESC 打印控制命令 (EPSON StandardCode 
              for Pr5nter) 已经成为了针式打印机控制语言事实上的工业标准，ESC/POS 打印命令集是 ESC 打印控制命令的简化版本，现在大多数 POS 
              打印都采用 ESC/POS 指令集。绝大多数打印机都有 EPSON ESC 的软件命令仿真功能，而且其它打印控制命令的格式和功能也都与 ESC 
              代码集类似。</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">由于早期的操作系统 
              DOS 与现在 Windows 的结构不同，在打印机内部软件和应用软件之间没有由硬件厂商提供的打印驱动程序，必须由应用软件直接通过硬件接口来控制打印机，所以从 
              ESC 指令出现开始，它就是公开的，否则没有应用软件可以使用它，而除了标准的 ESC 指令外，每种型号的打印机其指令又不太一样，所以在 DOS 
              软件中，你可以看到每个应用软件都只是支持为数不多的几种常用打印机。</P>
            <P style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">ESC 
              指令在形式上分为两种格式，一种是文本方式控制码，一种是 Escape 
              转义序列码。文本方式控制码由一字节字符码表示，实现的是与打印机硬件操作有关的指令，Escape 序列码由转义字符和参数字符或打印数据组成。</P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=1 src="clip_image002.gif" width=100></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=6 src="clip_image001.gif" width=8></P>
            <P style="MARGIN: 0in"><IMG height=4 src="clip_image001.gif" width=100></P>
            <P 
style="FONT-WEIGHT: bold; FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">建立打印连接</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">通过上面的介绍，了解了实现无驱打印原来只是一层窗户纸，具体的方法就是首先建立打印机连接，然后写入爱普生指令即可。那么如何建立打印机连接？以网口 
              POS 打印机举例。</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">第一步，首先要给网口打印机赋一个 
              IP 地址，例如叫做 192.168.0.18 。</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">第二步，编写连接代码。</P>
            <P 
style="FONT-SIZE: 8.25pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: 'Andale Mono'">Socket 
              client=new java.net.Socket(); <BR>
              PrintWriter socketWriter; <BR>
              client.connect(new InetSocketAddress("192.168.0.18" , 9100),1000); // 创建一个 
              socket <BR>
              socketWriter = new PrintWriter(client.getOutputStream());// 
              创建输入输出数据流</P>
            <P style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">看起来跟一般的 
              socket 连接没有很大的区别，就是赋一个 IP 地址和一个端口号，并设置一下超时时间即可，只需要说明的是，一般 POS 打印机的端口都是 9100 
              。</P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=1 src="clip_image002.gif" width=100></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=6 src="clip_image001.gif" width=8></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P 
style="FONT-WEIGHT: bold; FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">写入打印内容</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">连接建立完毕，写入内容就非常容易，只要使用 
              write 或者 println 方法写入即可，其中 write 方法是写入数字或字符，println 写入一行字符串。</P>
            <P style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">例如：写入数字 
              socketWriter.write(0);</P>
            <P style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">写入一行字符串 
              socketWriter.println( “巧富餐饮软件后厨单据” );</P>
            <P style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">再入一行字符串 
              socketWriter.println( “桌位 14 桌，人数 3 ” );</P>
            <P style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">再入一行字符串 
              socketWriter.println( “跺脚鱼头 1 份” );</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">您或许有疑问？内容已经成功写入，好像我们还没有用到爱普生指令。是的，如果只是普通的写入内容，不需要用到爱普生指令，爱普生指令主要帮助实现放大字体，自动走纸，打印条形码等功能。</P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=1 src="clip_image002.gif" width=100></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=6 src="clip_image001.gif" width=8></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P 
style="FONT-WEIGHT: bold; FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">放大字体</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">放大字体需要用到爱普生的 
              0x1c 指令，使用爱普生指令的方法很简单，只要向端口写入指令即可，例如：</P>
            <P 
style="FONT-SIZE: 8.25pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: 'Andale Mono'">socketWriter.write(0x1c);</P>
            <P style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">注意 
              0x1c，是 16 进制的数字，当然也可以转换成 10 
              进制来写。需要说明的是，使用爱普生指令放大字体不能随意放大，因为它不是图形化打印，而是文本化打印，所以纵向或者横向只能按照倍数放大，不能矢量放大。例如在 
              POS58 打印机上将“巧富餐饮软件”几个字放大打印，可以有如下放大方法。</P>
            <P 
style="FONT-SIZE: 8.25pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: 'Andale Mono'">/* 
              横向放大一倍 */ <BR>
              socketWriter.write(0x1c); <BR>
              socketWriter.write(0x21); <BR>
              socketWriter.write(4); <BR>
              /* 纵向放大一倍 */ <BR>
              socketWriter.write(0x1c); <BR>
              socketWriter.write(0x21); <BR>
              socketWriter.write(8); <BR>
              /* 横向纵向都放大一倍 */ <BR>
              socketWriter.write(0x1c); <BR>
              socketWriter.write(0x21); <BR>
              socketWriter.write(12);</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">一般情况下，我们倾向采用纵向放大一倍的方法，放大后的字体看起来有点像仿宋体，视觉效果还不错。</P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=1 src="clip_image002.gif" width=100></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=6 src="clip_image001.gif" width=8></P>
            <P style="MARGIN: 0in"><IMG height=4 src="clip_image001.gif" width=100></P>
            <P 
style="FONT-WEIGHT: bold; FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">兼容多种类型打印机</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">现在知道了使用爱普生指令的方法，所以只要有一本爱普生指令手册在手里，就可以用 
              Java 控制打印机进行无驱打印。但是现在问题是，同样是爱普生指令，不同的 pos 打印机可能不一样，就拿放大字体来说，pos58 打印机和 pos80 
              打印机指令就不尽相同。这时候怎么办呢？如何兼容多种类型打印机？</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">比如说，有的打印机并不是使用 
              0x1c 作为放大指令，而是使用 0x1b 作为放大指令，怎么办？容易。</P>
            <P 
style="FONT-SIZE: 8.25pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: 'Andale Mono'">/* 
              横向放大一倍 */ <BR>
              socketWriter.write(0x1c); <BR>
              socketWriter.write(0x21); <BR>
              socketWriter.write(4); <BR>
              socketWriter.write(0x1b); <BR>
              socketWriter.write(0x21); <BR>
              socketWriter.write(4); <BR>
              /* 纵向放大一倍 */ <BR>
              socketWriter.write(0x1c); <BR>
              socketWriter.write(0x21); <BR>
              socketWriter.write(8); <BR>
              socketWriter.write(0x1b); <BR>
              socketWriter.write(0x21); <BR>
              socketWriter.write(8); <BR>
              /* 横向纵向都放大一倍 */ <BR>
              socketWriter.write(0x1c); <BR>
              socketWriter.write(0x21); <BR>
              socketWriter.write(12); <BR>
              socketWriter.write(0x1b); <BR>
              socketWriter.write(0x21); <BR>
              socketWriter.write(12);</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">看明白了吗？就是写两遍就行，因为如果 
              0x1b 指令若不存在，打印机自动将其抛弃。</P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=1 src="clip_image002.gif" width=100></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=6 src="clip_image001.gif" width=8></P>
            <P style="MARGIN: 0in"><IMG height=4 src="clip_image001.gif" width=100></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P 
style="FONT-WEIGHT: bold; FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">实现自动走纸</P>
            <P style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">POS 
              打印机因为出纸口有一些深度，打印完毕为了避免撕裂文字内容，一般需要适当走纸才行，当然可以使用爱普生指令来走纸，但是这样并不稳妥，为什么呢 ? 因为要考虑 POS 
              机的兼容性，所以一般采用打印空行的方式实现走纸。</P>
            <P 
style="FONT-SIZE: 8.25pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: 'Andale Mono'">for(int 
              i=0;i&lt;10;i++){ <BR>
              <SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.println(" ");// 打印完毕自动走纸<BR>
              }</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">显然，打印空行的方式有更好地兼容性。</P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=1 src="clip_image002.gif" width=100></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=6 src="clip_image001.gif" width=8></P>
            <P style="MARGIN: 0in"><IMG height=4 src="clip_image001.gif" width=100></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P 
style="FONT-WEIGHT: bold; FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">打印条形码</P>
            <P style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black"><SPAN 
style="FONT-FAMILY: Arial">条形码在各个行业中现在有广泛的应用，所以让打印机打印条形码是非常重要的功能，不过你不需要费好多精力去研究条形码知识，因为爱普生指令中有一个打印条形码指令，例如我们要打印条形码“ 
              091955826335 ”</SPAN><SPAN style="FONT-FAMILY: SimSun">，只要使用如下命令即可。</SPAN></P>
            <P 
style="FONT-SIZE: 8.25pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: 'Andale Mono'">socketWriter.write(0x1d); <BR>
              socketWriter.write(0x68); <BR>
              socketWriter.write(120); <BR>
              socketWriter.write(0x1d); <BR>
              socketWriter.write(0x48); <BR>
              socketWriter.write(0x01); <BR>
              socketWriter.write(0x1d); <BR>
              socketWriter.write(0x6B); <BR>
              socketWriter.write(0x02); <BR>
              socketWriter.println "091955826335" ); <BR>
              socketWriter.write(0x00);</P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=1 src="clip_image002.gif" width=100></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=6 src="clip_image001.gif" width=8></P>
            <P style="MARGIN: 0in"><IMG height=4 src="clip_image001.gif" width=100></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P 
style="FONT-WEIGHT: bold; FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">完整的代码</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">好了，下面举一个完整的例子，我们来建立一个叫做 
              print 的方法，向某个打印机打印一个字符和条形码，并实现自动走纸，代码如下：</P>
            <P 
style="FONT-SIZE: 8.25pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: 'Andale Mono'">private 
              boolean print(String ip, int port, String str,String code,int skip) <BR>
              throws 
              Exception{ <BR>
              <SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>Socket client=new 
              java.net.Socket(); <BR>
              <SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>PrintWriter 
              socketWriter; <BR>
              <SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>client.connect(new 
              InetSocketAddress(ip,port),1000); // 创建一个 socket <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter = new 
              PrintWriter(client.getOutputStream());// 创建输入输出数据流<BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>/* 纵向放大一倍 */ <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(0x1c); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(0x21); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(8); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(0x1b); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(0x21); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(8); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.println(str); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>// 打印条形码<BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(0x1d); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(0x68); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(120); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(0x1d); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(0x48); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(0x01); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(0x1d); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(0x6B); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(0x02); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.println(code); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.write(0x00); <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>for(int i=0;i&lt;skip;i++){ <BR>
              <SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>socketWriter.println(" ");// 
              打印完毕自动走纸<BR>
              <SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>} <BR>
            <SPAN 
style="mso-spacerun: yes">&nbsp;</SPAN>}</P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=1 src="clip_image002.gif" width=100></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P style="MARGIN: 0in"><IMG height=6 src="clip_image001.gif" width=8></P>
            <P style="MARGIN: 0in"><IMG height=4 src="clip_image001.gif" width=100></P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P 
style="FONT-WEIGHT: bold; FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">小结</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">本文虽然只是讲述了网口打印机的直接写端口方式，似乎对并口打印机无效，其实不是这样，并口打印机只要接一个打印服务器就可以用了，缺点就是非一体机，然后还要安装打印服务器驱动。</P>
            <P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">这种无驱打印在非常广泛的范围内可以得到应用，包括餐饮、超市、医药等等其他需要用到 
              POS 打印机的行业。</P>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P 
style="FONT-WEIGHT: bold; FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">参考资料 </P>
            <UL 
style="MARGIN-TOP: 0in; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 0.375in; DIRECTION: ltr; unicode-bidi: embed" 
type=disc>
              <LI 
style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; COLOR: black"><SPAN 
style="FONT-SIZE: 9pt; COLOR: black; FONT-FAMILY: Arial">“</SPAN><A 
href="http://www.ibm.com/developerworks/cn/java/j-merlin/part10/"><SPAN 
style="FONT-SIZE: 9pt; COLOR: black; FONT-FAMILY: Arial">Merlin 的魔力：在 JDK 1.4 
                中打印，第 1 部分</SPAN></A><SPAN 
style="FONT-SIZE: 9pt; COLOR: black; FONT-FAMILY: Arial">”（developerWorks，2002 年 
                4 月）：介绍 JDK 1.4 为 Java 平台带来了另一套打印功能和技术。</SPAN>
              <LI 
style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; COLOR: black"><SPAN 
style="FONT-SIZE: 9pt; COLOR: black; FONT-FAMILY: Arial">“</SPAN><A 
href="http://www.ibm.com/developerworks/cn/java/l-javaprint/"><SPAN 
style="FONT-SIZE: 9pt; COLOR: black; FONT-FAMILY: Arial">Java 
                打印程序设计</SPAN></A><SPAN 
style="FONT-SIZE: 9pt; COLOR: black; FONT-FAMILY: Arial">”（developerWorks，2002 年 
                10 月）：介绍 JDK 1.4 提供的一套完整的“Java 打印服务 API”（Java Print Service API）。</SPAN>
              <LI 
style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; COLOR: black"><SPAN 
style="FONT-SIZE: 9pt; COLOR: black; FONT-FAMILY: Arial">“</SPAN><A 
href="http://www.ibm.com/developerworks/cn/java/l-oojavaprint/"><SPAN 
style="FONT-SIZE: 9pt; COLOR: black; FONT-FAMILY: Arial">用 Java 
                设计面向对象的打印程序</SPAN></A><SPAN 
style="FONT-SIZE: 9pt; COLOR: black; FONT-FAMILY: Arial">”（developerWorks，2002 年 
                12 月）：如果将打印内容进行对象化分析，设计出面向对象的打印程序，则会更出色地完成打印要求，并且代码很容易重用，事半功倍。</SPAN>
              <LI 
style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; COLOR: black"><SPAN 
style="FONT-SIZE: 9pt; COLOR: black; FONT-FAMILY: Arial">您可以在 developerWorks 的 </SPAN><A href="http://www.ibm.com/developerworks/cn/java/"><SPAN 
style="FONT-SIZE: 9pt; COLOR: black; FONT-FAMILY: Arial">Java 
                技术专区</SPAN></A><SPAN style="FONT-SIZE: 9pt; COLOR: black; FONT-FAMILY: Arial"> 中找到有关 Java 编程各方面知识的文章。 </SPAN></LI>
            </UL>
            <P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
            <P 
style="FONT-WEIGHT: bold; FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">关于作者</P>
            <DIV style="DIRECTION: ltr">
              <TABLE 
style="BORDER-RIGHT: #a3a3a3 0pt solid; BORDER-TOP: #a3a3a3 0pt solid; BORDER-LEFT: #a3a3a3 0pt solid; DIRECTION: ltr; BORDER-BOTTOM: #a3a3a3 0pt solid; BORDER-COLLAPSE: collapse" 
cellSpacing=0 cellPadding=0 border=0 valign="top">
                <TBODY>
                  <TR>
                    <TD 
style="BORDER-TOP-WIDTH: 0pt; PADDING-RIGHT: 4pt; PADDING-LEFT: 4pt; BORDER-LEFT-WIDTH: 0pt; BORDER-BOTTOM-WIDTH: 0pt; PADDING-BOTTOM: 4pt; VERTICAL-ALIGN: top; WIDTH: 1.229in; PADDING-TOP: 4pt; BORDER-RIGHT-WIDTH: 0pt"><P style="MARGIN: 0in"><IMG height=5 src="clip_image001.gif" width=100></P></TD>
                    <TD 
style="BORDER-TOP-WIDTH: 0pt; PADDING-RIGHT: 4pt; PADDING-LEFT: 4pt; BORDER-LEFT-WIDTH: 0pt; BORDER-BOTTOM-WIDTH: 0pt; PADDING-BOTTOM: 4pt; VERTICAL-ALIGN: top; WIDTH: 0.667in; PADDING-TOP: 4pt; BORDER-RIGHT-WIDTH: 0pt"><P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P></TD>
                    <TD 
style="BORDER-TOP-WIDTH: 0pt; PADDING-RIGHT: 4pt; PADDING-LEFT: 4pt; BORDER-LEFT-WIDTH: 0pt; BORDER-BOTTOM-WIDTH: 0pt; PADDING-BOTTOM: 4pt; VERTICAL-ALIGN: top; WIDTH: 8.218in; PADDING-TOP: 4pt; BORDER-RIGHT-WIDTH: 0pt"><P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P></TD>
                  </TR>
                  <TR>
                    <TD 
style="BORDER-TOP-WIDTH: 0pt; PADDING-RIGHT: 4pt; PADDING-LEFT: 4pt; BORDER-LEFT-WIDTH: 0pt; BORDER-BOTTOM-WIDTH: 0pt; PADDING-BOTTOM: 4pt; VERTICAL-ALIGN: top; WIDTH: 1.229in; PADDING-TOP: 4pt; BORDER-RIGHT-WIDTH: 0pt"><P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P></TD>
                    <TD 
style="BORDER-TOP-WIDTH: 0pt; PADDING-RIGHT: 4pt; PADDING-LEFT: 4pt; BORDER-LEFT-WIDTH: 0pt; BORDER-BOTTOM-WIDTH: 0pt; PADDING-BOTTOM: 4pt; VERTICAL-ALIGN: top; WIDTH: 0.667in; PADDING-TOP: 4pt; BORDER-RIGHT-WIDTH: 0pt"><P style="MARGIN: 0in"><IMG height=5 src="clip_image001.gif" width=4></P></TD>
                    <TD 
style="BORDER-TOP-WIDTH: 0pt; PADDING-RIGHT: 4pt; PADDING-LEFT: 4pt; BORDER-LEFT-WIDTH: 0pt; BORDER-BOTTOM-WIDTH: 0pt; PADDING-BOTTOM: 4pt; VERTICAL-ALIGN: top; WIDTH: 8.218in; PADDING-TOP: 4pt; BORDER-RIGHT-WIDTH: 0pt"><P 
style="FONT-SIZE: 9pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Arial">于丙超，北京周服科技有限公司（<A 
href="http://www.chofo.com/">http://www.chofo.com</A>）创始人，法人，总经理，有十多年 Java 
                        编程经验，已出版各种 IT 
                        专业书籍四本，在各类杂志，期刊发表论文多篇。</P></TD>
                  </TR>
                </TBODY>
              </TABLE>
            </DIV>
        </UL></TD>
      </TR>
    </TBODY>
  </TABLE>
</DIV>
<P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
<P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
<P style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: SimSun">&nbsp;</P>
<!--EndFragment--><!--EndFragment-->
</BODY>
</HTML>