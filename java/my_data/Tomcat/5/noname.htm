<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head 
id=Head>
<title>apache、tomcat，ssl,的整合，加入集群的功能</title>
<link 
id=MainCss href="style.css" type=text/css 
rel=stylesheet>
<link id=RSSLink title=RSS 
href="rss.aspx" type=application/rss+xml 
rel=alternate>
<style type="text/css">
body {
	background-repeat: no-repeat;
}
</style>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
</head>

<body>
<form id=Form1 name=Form1 action=38190.html method=post 
_initialaction="38190.html">
  <table cellspacing=0 cellpadding=0 width="90%" align=center border=0>
    <tbody>
      <tr>
        <td 
style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px" 
valign=top width="75%"><table class=index height=1400 cellspacing=0 cellpadding=5 width="100%" 
align=center bgcolor=white border=0>
            <tbody>
              <tr>
                <td class=banner valign=top><div class=block>
                    <div class=post>
                      <div class=postcontent><!--StartFragment-->由于项目的需要，需要对项目环境进行一些配置，主要是apache和tomcat的整合，并加入集群的功能，在apache中加入ssl，增加其安全性，我在网上找了很长的时间，找到一些资料，但是都不完整，一般只介绍其中的一部分而已，在这些教程的基础上，加上官方网站的资料，经过努力终于搞定了。这些都来自网络，我只是把他们都整合到一起，希望对你有所帮助，如果你有什么更好的配置方法，请联系我，谢谢。<br>
                        目标：apache、tomcat，ssl,的整合，加入集群的功能<br>
                        操作系统：FC4-i386,redhat 
                        as 
                        4<br>
                        所需软件：httpd-2.2.0,jakarta-tomcat-5.0.30,jdk1.4或者jdk1.5,openssl-0.9.8,ssl.ca-0.1.tar.gz<br>
                        安装openssl<br>
                        &nbsp; 
                        $ tar zxf&nbsp;&nbsp; openssl-0.9.8.tar.gz<br>
                        &nbsp; $ cd openssl-0.98<br>
                        &nbsp; $ ./config 
                        --prefix=/usr/local/ssl<br>
                        &nbsp; $ make<br>
                        &nbsp; $ make test<br>
                        &nbsp; $ make 
                        install<br>
                        <br>
                        安装httpd,并支持ssl<br>
                        # tar zxf httpd-2.2.0.tar.gz<br>
                        # cd 
                        httpd-2.2.0<br>
                        <br>
                        apr和apr-util的安装<br>
                        <br>
                        安装apr<br>
                        # cd srclib/apr<br>
                        # 
                        ./configure --prefix=/usr/local/apr<br>
                        # make<br>
                        # make 
                        install<br>
                        <br>
                        安装apr-util<br>
                        # cd ../apr-util/<br>
                        # ./configure 
                        --prefix=/usr/local/apr-util \<br>
                        &nbsp;&nbsp;&nbsp; --with-apr=/usr/local/apr<br>
                        # make<br>
                        # 
                        make install<br>
                        # cd ../../<br>
                        <br>
                        安装apache<br>
                        # ./configure 
                        --prefix=/usr/local/apache \<br>
                        &nbsp;&nbsp;&nbsp; --enable-so \<br>
                        --enable-proxy-balancer 
                        \<br>
                        &nbsp;&nbsp;&nbsp; --enable-rewrite=share \<br>
                        &nbsp;&nbsp;&nbsp; --enable-proxy=share \<br>
                        &nbsp;&nbsp;&nbsp; 
                        --enable-proxy-ajp=share \<br>
                        &nbsp;&nbsp;&nbsp; --enable-dav=share \<br>
                        &nbsp;&nbsp;&nbsp; 
                        --with-apr=/usr/local/apr \<br>
                        &nbsp;&nbsp;&nbsp; --with-apr-util=/usr/local/apr-util/&nbsp; 
                        \<br>
                        &nbsp;&nbsp;&nbsp; --enable-ssl=static \<br>
                        &nbsp;&nbsp;&nbsp; --with-ssl=/usr/local/ssl<br>
                        &nbsp;&nbsp;&nbsp; 
                        --enable-mods-shared=all<br>
                        # make<br>
                        # make 
                        install<br>
                        安装ssl临时证书：<br>
                        ssl.ca-0.1.tar.gz<br>
                        # cd /usr/local/apache2/conf<br>
                        # 
                        tar zxvf ssl.ca-0.1.tar.gz<br>
                        # cd ssl.ca-0.1<br>
                        # 
                        ./new-root-ca.sh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br>
                        No Root CA key round. Generating 
                        one<br>
                        Generating RSA private key, 1024 bit long 
                        modulus<br>
                        ...........................++++++<br>
                        ....++++++<br>
                        e is 65537 
                        (0x10001)<br>
                        Enter pass phrase for ca.key:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br>
                        Verifying - Enter 
                        pass phrase for ca.key: &nbsp;<br>
                        ......<br>
                        Self-sign the root CA...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                        &nbsp;<br>
                        Enter pass phrase for ca.key:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                        &nbsp;<br>
                        ........<br>
                        ........&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br>
                        Country Name (2 
                        letter code) [MY]:CN<br>
                        State or Province Name (full name) 
                        [Perak]:ZheJiang<br>
                        Locality Name (eg, city) [Sitiawan]:HangZhou<br>
                        Organization 
                        Name (eg, company) [My Directory Sdn Bhd]:sc<br>
                        Organizational Unit Name (eg, 
                        section) [Certification Services Division]:sc<br>
                        Common Name (eg, MD Root CA) 
                        []:2<br>
                        Email Address 
                        []:admin@admin.com<br>
                        <br>
                        这样就生成了ca.key和ca.crt两个文件，接下来生成一个证书：<br>
                        # 
                        ./new-server-cert.sh server&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br>
                        ......<br>
                        ......<br>
                        Country Name (2 letter 
                        code) [MY]:CN<br>
                        State or Province Name (full name) [Perak]:ZheJiang<br>
                        Locality 
                        Name (eg, city) [Sitiawan]:HangZhou<br>
                        Organization Name (eg, company) [My 
                        Directory Sdn Bhd]:sc<br>
                        Organizational Unit Name (eg, section) [Secure Web 
                        Server]:sc<br>
                        Common Name (eg, www.domain.com) []:2<br>
                        Email Address 
                        []:admin@admin.com<br>
                        <br>
                        这样就生成了server.csr和server.key这两个文件。<br>
                        还需要签署一下才能使用的：<br>
                        # 
                        ./sign-server-cert.sh server<br>
                        CA signing: server.csr -&gt; 
                        server.crt:<br>
                        Using configuration from ca.config<br>
                        Enter pass phrase for 
                        ./ca.key:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br>
                        Check that the request matches the signature<br>
                        Signature 
                        ok<br>
                        The Subject's Distinguished Name is as follows<br>
                        countryName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                        :PRINTABLE:'CN'<br>
                        stateOrProvinceName&nbsp;&nbsp; 
                        :PRINTABLE:'JiangSu'<br>
                        localityName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                        :PRINTABLE:'NanJing'<br>
                        organizationName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :PRINTABLE:'Wiscom System 
                        Co.,Ltd'<br>
                        organizationalUnitName:PRINTABLE:'ACSTAR'<br>
                        commonName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                        :PRINTABLE:'acmail.wiscom.com.cn'<br>
                        emailAddress&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                        :IA5STRING:'acmail@wiscom.com.cn'<br>
                        Certificate is to be certified until Jul 16 
                        12:55:34 2005 GMT (365 days)<br>
                        Sign the certificate? [y/n]:y<br>
                        1 out of 1 
                        certificate requests certified, commit? [y/n]y<br>
                        Write out database with 1 new 
                        entries<br>
                        Data Base Updated<br>
                        CA verifying: server.crt &lt;-&gt; CA 
                        cert<br>
                        server.crt: 
                        OK<br>
                        <br>
                        <br>
                        下面要按照ssl.conf里面的设置，将证书放在适当的位置。<br>
                        <br>
                        最后是配置conf/httpd.conf<br>
                        此文件中找到<br>
                        # 
                        Secure (SSL/TLS) connections<br>
                        #Include conf/extra/httpd-ssl.conf<br>
                        把#Include 
                        conf/extra/httpd-ssl.conf前面的'#'号去掉保存<br>
                        启动服务器,测试<br>
                        $cd bin<br>
                        $./apachectl 
                        start&nbsp;&nbsp;&nbsp;&nbsp; 
                        &nbsp;<br>
                        浏览器中打入http://127.0.0.1/和https://127.0.0.1,如果看到同一个成功画面,说明apache+ssl配置成功.<br>
                        jdk的安装<br>
                        把jdk1.4或者jdk1.5复制到/usr/local<br>
                        $chmod 
                        755 
                        jdk....bin<br>
                        $./jdk....bin<br>
                        配置全局变量,打开/etc/profile文件,加入<br>
                        JAVA_HOME=这里为你jdk安装目录<br>
                        JRE_HOME=$JAVA_HOME/jre<br>
                        PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH:$HOME/bin<br>
                        export 
                        JAVA_HOME JRE_HOME PATH<br>
                        #ant<br>
                        PATH=/usr/local/ant/bin:$PATH<br>
                        export 
                        PATH<br>
                        重起电脑.<br>
                        配置完毕.<br>
                        tomcat安装<br>
                        首先把tomcat复制到目录/usr/local<br>
                        $tar zxf 
                        jakarta-tomcat-5.0.30.tar.gz<br>
                        $cd 
                        jakarta-tomcat-5.0.30/bin<br>
                        $./startup.sh<br>
                        浏览器中打入http://127.0.0.1:8080/,如果看到tomcat的欢迎画面，表示安装成功.<br>
                        配置apache目录下conf/httpd.conf文件,<br>
                        此文件中找到<br>
                        #Include 
                        conf/extra/httpd-vhosts.conf<br>
                        把#Include 
                        conf/extra/httpd-ssl.conf前面的'#'号去掉保存,然后打开conf/extra/httpd-vhosts.conf文件的找到&lt;VirtualHost 
                        _default_:443&gt;,在其里面加入<br>
                        &nbsp;&nbsp;&nbsp; ServerAdmin admin@easyea.com<br>
                        &nbsp;&nbsp;&nbsp; ProxyPass / 
                        ajp://localhost:8009/<br>
                        &nbsp;&nbsp;&nbsp; ProxyPassReverse / ajp://localhost:8009/<br>
                        &nbsp;&nbsp;&nbsp; 
                        ServerName localhost<br>
                        &nbsp;&nbsp;&nbsp; ServerAlias www.easyea.com<br>
                        &nbsp;&nbsp;&nbsp; ErrorLog 
                        logs/easyea.com-error_log<br>
                        &nbsp;&nbsp;&nbsp; CustomLog logs/easyea.com-access_log 
                        common<br>
                        加入的设置有些是与它原先的默认设置是冲突的,请删掉相应冲突的设置. <br>
                        启动服务器,测试,浏览器中打入https://127.0.0.1,如果看到tomcat的欢迎画面,表示配置成功.<br>
                        集群和sesion复制<br>
                        集群<br>
                        在conf/extra/httpd-vhosts.conf文件的找到&lt;VirtualHost 
                        _default_:443&gt;,在其里面加入<br>
                        &lt;Proxy balancer://128.8.153.203&gt;<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                        BalancerMember ajp://localhost:8009<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BalancerMember 
                        ajp://128.8.153.81:8009<br>
                        &lt;/Proxy&gt;<br>
                        &lt;Location /sc/&gt;<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                        ProxyPass balancer://128.8.153.203/sc/<br>
                        &lt;/Location&gt;<br>
                        sesion复制<br>
                        &nbsp;&nbsp;&nbsp; 
                        tomcat的conf/server.xml文件中,把Cluster 
                        部分的注释去掉,最后一步是把你所要的session复制的项目中的web.xml中加入&lt;distributable 
                        /&gt;,测试的话你需要两个配置一样的tomcat<br>
                        配置到这里配置完成,在装的过程中因为环境的问题,配置可能有所不同.<br>
                      <!--EndFragment--></div>
                    </div>
                  </div></td>
              </tr>
            </tbody>
          </table></td>
      </tr>
    </tbody>
  </table>
</form>
</body>
</html>