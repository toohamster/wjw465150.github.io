<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>HTTP请求中的form data和request payload的区别</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<P 
style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; WHITE-SPACE: normal; BORDER-BOTTOM-WIDTH: 0px; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/25px Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">今天帮朋友调试一个程序时发现用jQuery的ajax方法和post方法分别发送请求，在后台Servlet进行处理时结果是不一样的，比如用$.ajax方法发送请求时（data参数是一个JSON.stringify()处理后的字符串，而不是一个JSON对象），servlet里可以这样使用Gson来解析：</P><PRE class=javascript style="WORD-WRAP: break-word; FONT-SIZE: 13px; FONT-VARIANT: normal; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; LINE-HEIGHT: 19px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px" data-result="[object Object]" data-second_best="[object Object]"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.5em; PADDING-TOP: 0.5em; PADDING-LEFT: 0.5em; MARGIN: auto 1px; DISPLAY: block; PADDING-RIGHT: 0.5em; BACKGROUND-COLOR: rgb(248,248,255)"><SPAN class=keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">new</SPAN> Jsonparser().parse(request.getReader())
</CODE></PRE>
<P 
style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; WHITE-SPACE: normal; BORDER-BOTTOM-WIDTH: 0px; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/25px Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">但此时是不可用request.getParam(key) 
来取值的。</P>
<P 
style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; WHITE-SPACE: normal; BORDER-BOTTOM-WIDTH: 0px; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/25px Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">如果用$.post方法来发送请求（data参数是一个JSON对象,而不要再用JSON.stringify()处理为字符串了），结果恰恰相反。</P>
<P 
style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; WHITE-SPACE: normal; BORDER-BOTTOM-WIDTH: 0px; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/25px Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">在Chrome中调试发现，$.ajax发送的请求显示在request 
payload下面，而使用$.post方法发送的请求显示在form 
data下面。有什么区别呢？在万能的stackoverflow上找到答案了，有人问了这个问题<A 
style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: rgb(0,102,204); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 2px; PADDING-RIGHT: 0px" 
href="http://stackoverflow.com/questions/10494574/what-is-the-difference-between-form-data-and-request-payload">What 
is the difference between form data and request payload?</A>：</P>
<BLOCKQUOTE 
style="BOX-SIZING: border-box; BORDER-TOP: rgb(239,239,239) 2px solid; BORDER-RIGHT: rgb(239,239,239) 2px solid; BACKGROUND: rgb(246,228,151); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(239,239,239) 2px solid; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 13px/1.6em Helvetica, Arial, sans-serif; PADDING-LEFT: 1em; MARGIN: 1em 0px 1em 1.5em; MIN-HEIGHT: 35px; BORDER-LEFT: rgb(238,238,238) 2px solid; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">
  <P 
  style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; TEXT-INDENT: 0px">When 
  I send an AJAX Post request and send parameters in queryString in send() 
  method,Chrome Developer Tool’s XHR capture tool shows the parameters under 
  request payload. and when I use jquery’s post function, The tool shows 
  parameters under Form Data section.</P></BLOCKQUOTE>
<BLOCKQUOTE 
style="BOX-SIZING: border-box; BORDER-TOP: rgb(239,239,239) 2px solid; BORDER-RIGHT: rgb(239,239,239) 2px solid; BACKGROUND: rgb(246,228,151); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(239,239,239) 2px solid; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 13px/1.6em Helvetica, Arial, sans-serif; PADDING-LEFT: 1em; MARGIN: 1em 0px 1em 1.5em; MIN-HEIGHT: 35px; BORDER-LEFT: rgb(238,238,238) 2px solid; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">
  <P 
  style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; TEXT-INDENT: 0px">What 
  is the difference ?</P></BLOCKQUOTE>
<P 
style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; WHITE-SPACE: normal; BORDER-BOTTOM-WIDTH: 0px; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/25px Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">回答是：</P>
<BLOCKQUOTE 
style="BOX-SIZING: border-box; BORDER-TOP: rgb(239,239,239) 2px solid; BORDER-RIGHT: rgb(239,239,239) 2px solid; BACKGROUND: rgb(246,228,151); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(239,239,239) 2px solid; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 13px/1.6em Helvetica, Arial, sans-serif; PADDING-LEFT: 1em; MARGIN: 1em 0px 1em 1.5em; MIN-HEIGHT: 35px; BORDER-LEFT: rgb(238,238,238) 2px solid; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">
  <P 
  style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; TEXT-INDENT: 0px">you 
  have not provided enough information how you use the send function, but I 
  assume that you do not set mime type to specify you are sending form 
data</P></BLOCKQUOTE><PRE style="WORD-WRAP: break-word; FONT-SIZE: 13px; FONT-VARIANT: normal; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; LINE-HEIGHT: 19px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px" data-result="[object Object]"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.5em; PADDING-TOP: 0.5em; PADDING-LEFT: 0.5em; MARGIN: auto 1px; DISPLAY: block; PADDING-RIGHT: 0.5em; BACKGROUND-COLOR: rgb(248,248,255)">xhr.setRequestHeader("Content-type","application/x-www-form-urlencoded");
</CODE></PRE>
<BLOCKQUOTE 
style="BOX-SIZING: border-box; BORDER-TOP: rgb(239,239,239) 2px solid; BORDER-RIGHT: rgb(239,239,239) 2px solid; BACKGROUND: rgb(246,228,151); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(239,239,239) 2px solid; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 13px/1.6em Helvetica, Arial, sans-serif; PADDING-LEFT: 1em; MARGIN: 1em 0px 1em 1.5em; MIN-HEIGHT: 35px; BORDER-LEFT: rgb(238,238,238) 2px solid; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">
  <P 
  style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; TEXT-INDENT: 0px">the 
  data sent are in this case encoded as you encode a query string</P></BLOCKQUOTE><PRE class=ruby style="WORD-WRAP: break-word; FONT-SIZE: 13px; FONT-VARIANT: normal; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; LINE-HEIGHT: 19px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px" data-result="[object Object]"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.5em; PADDING-TOP: 0.5em; PADDING-LEFT: 0.5em; MARGIN: auto 1px; DISPLAY: block; PADDING-RIGHT: 0.5em; BACKGROUND-COLOR: rgb(248,248,255)"><SPAN class=identifier style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">xhr</SPAN>.<SPAN class=identifier style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px"><SPAN class=keymethods style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">send</SPAN></SPAN>(<SPAN class=string style="BOX-SIZING: border-box; COLOR: rgb(221,17,68); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">"name=foo&amp;value=bar"</SPAN>);
</CODE></PRE>
<BLOCKQUOTE 
style="BOX-SIZING: border-box; BORDER-TOP: rgb(239,239,239) 2px solid; BORDER-RIGHT: rgb(239,239,239) 2px solid; BACKGROUND: rgb(246,228,151); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(239,239,239) 2px solid; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 13px/1.6em Helvetica, Arial, sans-serif; PADDING-LEFT: 1em; MARGIN: 1em 0px 1em 1.5em; MIN-HEIGHT: 35px; BORDER-LEFT: rgb(238,238,238) 2px solid; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">
  <P 
  style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; TEXT-INDENT: 0px">otherwise 
  it will not be interpreted as form data by Developer Tools. jquery does 
  majority of work for you in this regard.</P></BLOCKQUOTE>
<P 
style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; WHITE-SPACE: normal; BORDER-BOTTOM-WIDTH: 0px; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/25px Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">关键就是设置Content-type这个Header为application/x-www-form-urlencoded，实际上对于常规的HTML页面上的form的Content-type默认就是这个值。</P>
<P 
style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; WHITE-SPACE: normal; BORDER-BOTTOM-WIDTH: 0px; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/25px Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">相似的问题还发生在AngularJS的$http方法中，<A 
style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: rgb(0,102,204); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 2px; PADDING-RIGHT: 0px" 
href="http://stackoverflow.com/questions/11442632/how-can-i-make-angular-js-post-data-as-form-data-instead-of-a-request-payload">How 
can I make angular.js post data as form data instead of a request 
payload?</A><SPAN class=Apple-converted-space 
style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">&nbsp;</SPAN>这个问题竟然有77个“顶”，看来遇到此问题的人还真不少。</P>
<P 
style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; WHITE-SPACE: normal; BORDER-BOTTOM-WIDTH: 0px; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/25px Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal"><EM 
style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">注：这个问题里说jQuery的ajax方法是可以的，我今天遇到是不可以的，这个需要再验证一下。</EM></P>
<P 
style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; WHITE-SPACE: normal; BORDER-BOTTOM-WIDTH: 0px; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/25px Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">当然解决的方法是一样的：</P><PRE class=css style="WORD-WRAP: break-word; FONT-SIZE: 13px; FONT-VARIANT: normal; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; LINE-HEIGHT: 19px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px" data-result="[object Object]" data-second_best="[object Object]"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.5em; PADDING-TOP: 0.5em; PADDING-LEFT: 0.5em; MARGIN: auto 1px; DISPLAY: block; PADDING-RIGHT: 0.5em; BACKGROUND-COLOR: rgb(248,248,255)">$<SPAN class=tag style="BOX-SIZING: border-box; FONT-WEIGHT: normal; COLOR: rgb(0,0,128); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">http</SPAN>(<SPAN class=rules style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">{
    <SPAN class=rule style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px"><SPAN class=attribute style="BOX-SIZING: border-box; COLOR: rgb(0,128,128); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">method</SPAN>:<SPAN class=value style="BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px"> <SPAN class=string style="BOX-SIZING: border-box; COLOR: rgb(221,17,68); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">'POST'</SPAN>,
    url: url,
    data: xsrf,
    headers: {<SPAN class=string style="BOX-SIZING: border-box; COLOR: rgb(221,17,68); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">'Content-Type'</SPAN>: <SPAN class=string style="BOX-SIZING: border-box; COLOR: rgb(221,17,68); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">'application/x-www-form-urlencoded'</SPAN></SPAN>}</SPAN></SPAN>
})
</CODE></PRE>
<P 
style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; WHITE-SPACE: normal; BORDER-BOTTOM-WIDTH: 0px; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/25px Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">ArgularJS的$http方法还支持全局设置：</P><PRE class=php style="WORD-WRAP: break-word; FONT-SIZE: 13px; FONT-VARIANT: normal; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; LINE-HEIGHT: 19px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px" data-result="[object Object]" data-second_best="[object Object]"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.5em; PADDING-TOP: 0.5em; PADDING-LEFT: 0.5em; MARGIN: auto 1px; DISPLAY: block; PADDING-RIGHT: 0.5em; BACKGROUND-COLOR: rgb(248,248,255)"><SPAN class=variable style="BOX-SIZING: border-box; COLOR: rgb(0,128,128); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">$http</SPAN>.defaults.headers.post[<SPAN class=string style="BOX-SIZING: border-box; COLOR: rgb(221,17,68); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">"Content-Type"</SPAN>] = <SPAN class=string style="BOX-SIZING: border-box; COLOR: rgb(221,17,68); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">"application/x-www-form-urlencoded"</SPAN>;
</CODE></PRE>
<P 
style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; WHITE-SPACE: normal; BORDER-BOTTOM-WIDTH: 0px; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/25px Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">还有人专门针对这个问题写了篇博客，分析了原因<A 
style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: rgb(0,102,204); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 2px; PADDING-RIGHT: 0px" 
href="http://victorblog.com/2012/12/20/make-angularjs-http-service-behave-like-jquery-ajax/">Make 
AngularJS $http service behave like jQuery.ajax()</A></P>
<BLOCKQUOTE 
style="BOX-SIZING: border-box; BORDER-TOP: rgb(239,239,239) 2px solid; BORDER-RIGHT: rgb(239,239,239) 2px solid; BACKGROUND: rgb(246,228,151); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(239,239,239) 2px solid; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 13px/1.6em Helvetica, Arial, sans-serif; PADDING-LEFT: 1em; MARGIN: 1em 0px 1em 1.5em; MIN-HEIGHT: 35px; BORDER-LEFT: rgb(238,238,238) 2px solid; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">
  <P 
  style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; TEXT-INDENT: 0px">The 
  difference is in how jQuery and AngularJS serialize and transmit the data. 
  Fundamentally, the problem lies with your server language of choice being 
  unable to understand AngularJS’s transmission natively―that’s a darn shame 
  because AngularJS is certainly not doing anything wrong. By default, jQuery 
  transmits data using Content-Type: x-www-form-urlencoded and the familiar 
  foo=bar&amp;baz=moe serialization. AngularJS, however, transmits data using 
  Content-Type: application/json and { “foo”: “bar”, “baz”: “moe” } JSON 
  serialization, which unfortunately some Web server languages―notably PHP―do 
  not unserialize natively.</P></BLOCKQUOTE>
<P 
style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; WHITE-SPACE: normal; BORDER-BOTTOM-WIDTH: 0px; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/25px Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">当然文章了给出了另外的一种处理方案，还没细读，这个问题先记录在这里，以后再做些例子来详细研究一下。</P>
<P 
style="BORDER-LEFT-WIDTH: 0px; BOX-SIZING: border-box; BORDER-RIGHT-WIDTH: 0px; WHITE-SPACE: normal; BORDER-BOTTOM-WIDTH: 0px; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/25px Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0.8em 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BACKGROUND-COLOR: rgb(246,228,151); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal">另外,如果做Server端的API，默认支持哪种请求为好呢？</P></body>
</html>
