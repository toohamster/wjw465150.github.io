<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">

<HTML dir=ltr xml:lang="zh-CN" 
xmlns="http://www.w3.org/1999/xhtml">
<HEAD>
<TITLE>JAVA应用JNI调用OpenCV实现人脸检测</TITLE>
<LINK 
href="favicon.ico" type=image/x-icon rel="shortcut icon">
<LINK 
title=lveyo的BCNDYL href="rss" type=application/rss+xml rel=alternate>
<LINK 
media=screen href="blog.css_1238644080" 
type=text/css rel=stylesheet>
<LINK media=screen 
href="blue.css_1235723792" 
type=text/css rel=stylesheet>
<LINK media=screen 
href="SyntaxHighlighter.css_1201588027" 
type=text/css rel=stylesheet>
<STYLE>
div#main {
	background-color: transparent;
	border: 0;
	padding: 0px;
	width: 740px;
}
</STYLE>
<LINK media=screen 
href="ui.css_1222156967" 
type=text/css rel=stylesheet>
<STYLE type=text/css>
.dp-j .annotation {
	COLOR: #646464
}
.dp-j .number {
	COLOR: #c00000
}
</STYLE>
<STYLE type=text/css>
.dp-j .annotation {
	COLOR: #646464
}
.dp-j .number {
	COLOR: #c00000
}
</STYLE>
<STYLE type=text/css>
.dp-cpp .datatypes {
	FONT-WEIGHT: bold;
	COLOR: #2e8b57
}
</STYLE>
<STYLE type=text/css>
.dp-cpp .datatypes {
	FONT-WEIGHT: bold;
	COLOR: #2e8b57
}
</STYLE>
<STYLE type=text/css>
.dp-j .annotation {
	COLOR: #646464
}
.dp-j .number {
	COLOR: #c00000
}
</STYLE>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
</HEAD>

<BODY>
<DIV id=page>
  <DIV class=clearfix id=content>
    <DIV id=main>
      <DIV class=blog_main><!--StartFragment-->
        <DIV class=blog_title>
          <H3 class=type_original title=原创><A 
href="http://lveyo.javaeye.com/blog/360622">JAVA应用JNI调用OpenCV实现人脸检测</A></H3>
          <STRONG>关键字: jni 
          opencv</STRONG> </DIV>
        <DIV class=blog_content>1.JAVA的JNI部分 <BR>
          调用JNI的基类 <BR>
          <DIV class=dp-highlighter>
            <DIV class=bar>
              <DIV class=tools>Java代码 <A title=复制代码 
onclick="dp.sh.Toolbar.CopyToClipboard(this);return false;" 
href="http://lveyo.javaeye.com/blog/360622#"><IMG alt=复制代码 
src="icon_copy.gif"></A></DIV>
            </DIV>
            <OL class=dp-j>
              <LI><SPAN><SPAN class=keyword>package</SPAN><SPAN>&nbsp;lveyo.bcndyl.jni.opencv; 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN></SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN 
class=keyword>class</SPAN><SPAN>&nbsp;JNIBase&nbsp;{ &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;JNIBase(){} 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=keyword>public</SPAN><SPAN>&nbsp;JNIBase(String&nbsp;libraryName){ 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadLibrary(libraryName); &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>private</SPAN><SPAN>&nbsp;</SPAN><SPAN 
class=keyword>static</SPAN><SPAN>&nbsp;</SPAN><SPAN 
class=keyword>void</SPAN><SPAN>&nbsp;loadLibrary(String&nbsp;libraryName){ 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.loadLibrary(libraryName); &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>}&nbsp;&nbsp;</SPAN></LI>
            </OL>
          </DIV>
          <PRE class=java style="DISPLAY: none" name="code">package lveyo.bcndyl.jni.opencv;
public class JNIBase {
	
	public JNIBase(){}
	
	public JNIBase(String libraryName){
		loadLibrary(libraryName);
	}
	
	private static void loadLibrary(String libraryName){
		System.loadLibrary(libraryName);
	}

}</PRE>
          <BR>
          <BR>
          实现这个基类 <BR>
          <DIV class=dp-highlighter>
            <DIV class=bar>
              <DIV class=tools>Java代码 <A title=复制代码 
onclick="dp.sh.Toolbar.CopyToClipboard(this);return false;" 
href="http://lveyo.javaeye.com/blog/360622#"><IMG alt=复制代码 
src="icon_copy.gif"></A></DIV>
            </DIV>
            <OL class=dp-j>
              <LI><SPAN><SPAN class=keyword>package</SPAN><SPAN>&nbsp;lveyo.bcndyl.jni.opencv; 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN></SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN 
class=keyword>class</SPAN><SPAN>&nbsp;JNIOpencv&nbsp;</SPAN><SPAN 
class=keyword>extends</SPAN><SPAN>&nbsp;JNIBase{ &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=keyword>public</SPAN><SPAN>&nbsp;JNIOpencv&nbsp;(String&nbsp;libraryName){ 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>super</SPAN><SPAN>(libraryName); 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;JNIOpencv(){ 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.loadLibrary(</SPAN><SPAN 
class=string>"jniOpenCV"</SPAN><SPAN>); &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN 
class=keyword>native</SPAN><SPAN>&nbsp;</SPAN><SPAN 
class=keyword>int</SPAN><SPAN>[]&nbsp;detectFace(</SPAN><SPAN 
class=keyword>int</SPAN><SPAN>&nbsp;minFaceWidth,&nbsp;</SPAN><SPAN 
class=keyword>int</SPAN><SPAN>&nbsp;minFaceHeight, &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;cascade,&nbsp;String&nbsp;filename); 
                &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>}&nbsp;&nbsp;</SPAN></LI>
            </OL>
          </DIV>
          <PRE class=java style="DISPLAY: none" name="code">package lveyo.bcndyl.jni.opencv;

public class JNIOpencv extends JNIBase{
	
	public JNIOpencv (String libraryName){
		super(libraryName);
	}
	
	public JNIOpencv(){
		System.loadLibrary("jniOpenCV");
	}

    public native int[] detectFace(int minFaceWidth, int minFaceHeight,
                                   String cascade, String filename);

}</PRE>
          <BR>
          <BR>
          类中定义了一个detectFace方法，是要用C来实现的。 <BR>
          <BR>
          编译好这个类后，要用在命令行用javah命令生成需要的.h的头文件： <BR>
          <DIV class=quote_title>引用</DIV>
          <DIV class=quote_div><BR>
            javah lveyo.bcndyl.jni.opencv.JNIOpencv <BR>
          </DIV>
          <BR>
          会生成一个名为lveyo_bcndyl_jni_opencv_JNIOpencv.h的头文件： <BR>
          <DIV class=dp-highlighter>
            <DIV class=bar>
              <DIV class=tools>C代码 <A title=复制代码 
onclick="dp.sh.Toolbar.CopyToClipboard(this);return false;" 
href="http://lveyo.javaeye.com/blog/360622#"><IMG alt=复制代码 
src="icon_copy.gif"></A></DIV>
            </DIV>
            <OL class=dp-cpp>
              <LI><SPAN><SPAN 
class=comment>/*&nbsp;DO&nbsp;NOT&nbsp;EDIT&nbsp;THIS&nbsp;FILE&nbsp;-&nbsp;it&nbsp;is&nbsp;machine&nbsp;generated&nbsp;*/</SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN></SPAN><SPAN class=preprocessor>#include&nbsp;&lt;jni.h&gt; </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN></SPAN><SPAN 
class=comment>/*&nbsp;Header&nbsp;for&nbsp;class&nbsp;lveyo_bcndyl_jni_opencv_JNIOpencv&nbsp;*/</SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN></SPAN><SPAN 
class=preprocessor>#ifndef&nbsp;_Included_lveyo_bcndyl_jni_opencv_JNIOpencv </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN></SPAN><SPAN 
class=preprocessor>#define&nbsp;_Included_lveyo_bcndyl_jni_opencv_JNIOpencv </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN></SPAN><SPAN class=preprocessor>#ifdef&nbsp;__cplusplus </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN></SPAN><SPAN class=keyword>extern</SPAN><SPAN>&nbsp;</SPAN><SPAN 
class=string>"C"</SPAN><SPAN>&nbsp;{ &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN></SPAN><SPAN class=preprocessor>#endif </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN></SPAN><SPAN class=comment>/* </SPAN>&nbsp;</SPAN></LI>
              <LI><SPAN><SPAN class=comment>&nbsp;*&nbsp;Class:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lveyo_bcndyl_jni_opencv_JNIOpencv </SPAN>&nbsp;</SPAN></LI>
              <LI><SPAN><SPAN class=comment>&nbsp;*&nbsp;Method:&nbsp;&nbsp;&nbsp;&nbsp;detectFace </SPAN>&nbsp;</SPAN></LI>
              <LI><SPAN><SPAN 
class=comment>&nbsp;*&nbsp;Signature:&nbsp;(IILjava/lang/String;Ljava/lang/String;)[I </SPAN>&nbsp;</SPAN></LI>
              <LI><SPAN><SPAN class=comment>&nbsp;*/</SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>JNIEXPORT&nbsp;jintArray&nbsp;JNICALL&nbsp;Java_lveyo_bcndyl_jni_opencv_JNIOpencv_detectFace 
                &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;(JNIEnv&nbsp;*,&nbsp;jobject,&nbsp;jint,&nbsp;jint,&nbsp;jstring,&nbsp;jstring); &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN></SPAN><SPAN class=preprocessor>#ifdef&nbsp;__cplusplus </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>} &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN></SPAN><SPAN class=preprocessor>#endif </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN></SPAN><SPAN 
class=preprocessor>#endif</SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
            </OL>
          </DIV>
          <PRE class=c style="DISPLAY: none" name="code">/* DO NOT EDIT THIS FILE - it is machine generated */
#include &lt;jni.h&gt;
/* Header for class lveyo_bcndyl_jni_opencv_JNIOpencv */

#ifndef _Included_lveyo_bcndyl_jni_opencv_JNIOpencv
#define _Included_lveyo_bcndyl_jni_opencv_JNIOpencv
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     lveyo_bcndyl_jni_opencv_JNIOpencv
 * Method:    detectFace
 * Signature: (IILjava/lang/String;Ljava/lang/String;)[I
 */
JNIEXPORT jintArray JNICALL Java_lveyo_bcndyl_jni_opencv_JNIOpencv_detectFace
  (JNIEnv *, jobject, jint, jint, jstring, jstring);

#ifdef __cplusplus
}
#endif
#endif</PRE>
          <BR>
          <BR>
          2.C程序部分 <BR>
          按照<A 
href="http://www.opencv.org.cn/index.php/Template:Install" 
target=_blank>http://www.opencv.org.cn/index.php/Template:Install</A>安装OpenCV并配置相应的开发环境，我这里用的是VS2005，同时要将JDK中的include目录和include/win32目录都加入到VS2005的Include 
          Files中。 <BR>
          新建一个win32 MFC 
          DLL项目jniOpenCV，把刚才生成的lveyo_bcndyl_jni_opencv_JNIOpencv.h头文件加入到项目，并且修改jniOpenCV.cpp文件： <BR>
          <DIV class=dp-highlighter>
            <DIV class=bar>
              <DIV class=tools>C++代码 <A title=复制代码 
onclick="dp.sh.Toolbar.CopyToClipboard(this);return false;" 
href="http://lveyo.javaeye.com/blog/360622#"><IMG alt=复制代码 
src="icon_copy.gif"></A></DIV>
            </DIV>
            <OL class=dp-cpp>
              <LI><SPAN><SPAN class=preprocessor>#include&nbsp;"stdafx.h" </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN></SPAN><SPAN class=preprocessor>#include&nbsp;&lt;jni.h&gt; </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN></SPAN><SPAN 
class=preprocessor>#include&nbsp;"lveyo_bcndyl_jni_opencv_JNIOpencv.h" </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN></SPAN><SPAN class=preprocessor>#include&nbsp;"cv.h" </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN></SPAN><SPAN class=preprocessor>#include&nbsp;"highgui.h" </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>JNIEXPORT&nbsp;jintArray&nbsp;JNICALL&nbsp;Java_lveyo_bcndyl_jni_opencv_JNIOpencv_detectFace 
                &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;(JNIEnv&nbsp;*env,&nbsp;jobject&nbsp;obj,&nbsp;jint&nbsp;width,&nbsp;jint&nbsp;height,&nbsp;jstring&nbsp;cascade,&nbsp;jstring&nbsp;filename) 
                &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>{ &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>const</SPAN><SPAN>&nbsp;</SPAN><SPAN 
class=datatypes>char</SPAN><SPAN>&nbsp;*str_cascade,&nbsp;*str_filename; 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;str_cascade&nbsp;=&nbsp;env-&gt;GetStringUTFChars(cascade,&nbsp;</SPAN><SPAN 
class=keyword>false</SPAN><SPAN>); &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;str_filename&nbsp;=&nbsp;env-&gt;GetStringUTFChars(filename,&nbsp;</SPAN><SPAN 
class=keyword>false</SPAN><SPAN>); &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;jintArray&nbsp;faceArray; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;CvHaarClassifierCascade&nbsp;*cv_cascade&nbsp;=&nbsp;(CvHaarClassifierCascade*)cvLoad(&nbsp;str_cascade&nbsp;); 
                &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;IplImage&nbsp;*image&nbsp;=&nbsp;cvLoadImage(&nbsp;str_filename,&nbsp;1&nbsp;); &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>if</SPAN><SPAN>(image!=0){ 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CvMemStorage*&nbsp;storage&nbsp;=&nbsp;cvCreateMemStorage(0); &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CvSeq*&nbsp;faces; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=comment>//double&nbsp;t&nbsp;=&nbsp;(double)cvGetTickCount(); </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=comment>/*&nbsp;use&nbsp;the&nbsp;fastest&nbsp;variant&nbsp;*/</SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;faces&nbsp;=&nbsp;cvHaarDetectObjects(&nbsp;image,&nbsp;cv_cascade,&nbsp;storage,&nbsp;1.2,&nbsp;2, 
                &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CV_HAAR_DO_CANNY_PRUNING,&nbsp;cvSize(width,&nbsp;height)&nbsp;); 
                &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=comment>//t&nbsp;=&nbsp;(double)cvGetTickCount()&nbsp;-&nbsp;t; </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=comment>//printf(&nbsp;"detection&nbsp;time&nbsp;=&nbsp;%gms\n",&nbsp;t/((double)cvGetTickFrequency()*1000.)&nbsp;); </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>const</SPAN><SPAN>&nbsp;</SPAN><SPAN 
class=datatypes>int</SPAN><SPAN>&nbsp;total&nbsp;=&nbsp;faces-&gt;total; &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;faceArray&nbsp;=&nbsp;env-&gt;&nbsp;NewIntArray(4*total); &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jint&nbsp;faceBuf[4]; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>for</SPAN><SPAN>(&nbsp;</SPAN><SPAN 
class=datatypes>int</SPAN><SPAN>&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;total;&nbsp;i++&nbsp;) 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CvRect&nbsp;face_rect&nbsp;=&nbsp;*(CvRect*)cvGetSeqElem(&nbsp;faces,&nbsp;i&nbsp;); 
                &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=datatypes>int</SPAN><SPAN>&nbsp;pointX&nbsp;=&nbsp;face_rect.x; &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=datatypes>int</SPAN><SPAN>&nbsp;pointY&nbsp;=&nbsp;face_rect.y; &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=datatypes>int</SPAN><SPAN>&nbsp;faceWidth&nbsp;=&nbsp;face_rect.width; 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=datatypes>int</SPAN><SPAN>&nbsp;faceHeight&nbsp;=&nbsp;face_rect.height; 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=comment>//printf("i&nbsp;%d,&nbsp;x&nbsp;%d,&nbsp;y&nbsp;%d,&nbsp;width&nbsp;%d,&nbsp;height&nbsp;%d\n", </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=comment>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i,pointX,pointY,faceWidth,faceHeight); </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;faceBuf[0]&nbsp;=&nbsp;pointX; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;faceBuf[1]&nbsp;=&nbsp;pointY; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;faceBuf[2]&nbsp;=&nbsp;faceWidth; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;faceBuf[3]&nbsp;=&nbsp;faceHeight; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env-&gt;SetIntArrayRegion(faceArray,i*4,4,faceBuf); 
                &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cvReleaseMemStorage(&nbsp;&amp;storage&nbsp;); &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cvReleaseImage(&nbsp;&amp;image&nbsp;); &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;cvReleaseHaarClassifierCascade(&nbsp;&amp;cv_cascade&nbsp;); &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;env-&gt;ReleaseStringUTFChars(cascade,&nbsp;str_cascade); 
                &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;env-&gt;ReleaseStringUTFChars(filename,&nbsp;str_filename); 
                &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>return</SPAN><SPAN>&nbsp;faceArray; 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>}&nbsp;&nbsp;</SPAN></LI>
            </OL>
          </DIV>
          <PRE class=c++ style="DISPLAY: none" name="code">#include "stdafx.h"
#include &lt;jni.h&gt;
#include "lveyo_bcndyl_jni_opencv_JNIOpencv.h"
#include "cv.h"
#include "highgui.h"

JNIEXPORT jintArray JNICALL Java_lveyo_bcndyl_jni_opencv_JNIOpencv_detectFace
  (JNIEnv *env, jobject obj, jint width, jint height, jstring cascade, jstring filename)
{
	const char *str_cascade, *str_filename;
	str_cascade = env-&gt;GetStringUTFChars(cascade, false);
	str_filename = env-&gt;GetStringUTFChars(filename, false);

	jintArray faceArray;
	CvHaarClassifierCascade *cv_cascade = (CvHaarClassifierCascade*)cvLoad( str_cascade );
	IplImage *image = cvLoadImage( str_filename, 1 );
	
	if(image!=0){

		CvMemStorage* storage = cvCreateMemStorage(0);
		CvSeq* faces;

		//double t = (double)cvGetTickCount();
		/* use the fastest variant */
		faces = cvHaarDetectObjects( image, cv_cascade, storage, 1.2, 2,
                                   CV_HAAR_DO_CANNY_PRUNING, cvSize(width, height) );
		//t = (double)cvGetTickCount() - t;
        //printf( "detection time = %gms\n", t/((double)cvGetTickFrequency()*1000.) );
		

		const int total = faces-&gt;total;

		faceArray = env-&gt; NewIntArray(4*total);
		jint faceBuf[4];
		
		for( int i = 0; i &lt; total; i++ )
		{
			CvRect face_rect = *(CvRect*)cvGetSeqElem( faces, i );
			int pointX = face_rect.x;
			int pointY = face_rect.y;
			int faceWidth = face_rect.width;
			int faceHeight = face_rect.height;

			//printf("i %d, x %d, y %d, width %d, height %d\n",
                        //        i,pointX,pointY,faceWidth,faceHeight);


			faceBuf[0] = pointX;
			faceBuf[1] = pointY;
			faceBuf[2] = faceWidth;
			faceBuf[3] = faceHeight;


			env-&gt;SetIntArrayRegion(faceArray,i*4,4,faceBuf);
			
		}
		
		cvReleaseMemStorage( &amp;storage );
		cvReleaseImage( &amp;image );
	}
	cvReleaseHaarClassifierCascade( &amp;cv_cascade );
    

	env-&gt;ReleaseStringUTFChars(cascade, str_cascade);
	env-&gt;ReleaseStringUTFChars(filename, str_filename);
	return faceArray;
}</PRE>
          <BR>
          编译生成jniOpenCV.dll。此处的检测代码是根据OpenCV的文档和示例程序修改，由于本人对c++程序不是很熟练，所以对此段代码是否会有潜在危险和内存泄露不是很肯定，还请熟悉c使用的朋友帮忙检查一下。 <BR>
          别忘记将生成的jniOpenCV.dll文件复制到%JAVA_HOME%/bin中，如果在没安装OpenCV的机器上运行，还需要将OpenCV安装目录中bin目录下所有dll文件一起复制到%JAVA_HOME%/bin中。 <BR>
          <BR>
          3.实现JAVA的调用 <BR>
          <BR>
          <DIV class=dp-highlighter>
            <DIV class=bar>
              <DIV class=tools>Java代码 <A title=复制代码 
onclick="dp.sh.Toolbar.CopyToClipboard(this);return false;" 
href="http://lveyo.javaeye.com/blog/360622#"><IMG alt=复制代码 
src="icon_copy.gif"></A></DIV>
            </DIV>
            <OL class=dp-j>
              <LI><SPAN><SPAN class=keyword>package</SPAN><SPAN>&nbsp;lveyo.bcndyl.jni.opencv; 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN></SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN 
class=keyword>class</SPAN><SPAN>&nbsp;Test&nbsp;{ &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN 
class=keyword>static</SPAN><SPAN>&nbsp;</SPAN><SPAN 
class=keyword>void</SPAN><SPAN>&nbsp;main(String[]&nbsp;args)&nbsp;{ &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=comment>//初始化JNI调用类JNIOpencv </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JNIOpencv&nbsp;open&nbsp;=&nbsp;</SPAN><SPAN 
class=keyword>new</SPAN><SPAN>&nbsp;JNIOpencv(</SPAN><SPAN 
class=string>"jniOpenCV"</SPAN><SPAN>); &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=comment>//要检测的图片文件 </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;filename&nbsp;=&nbsp;</SPAN><SPAN 
class=string>"d:/80010.jpg"</SPAN><SPAN>; &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=comment>//OpenCv提供的人间的特征文件 </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;cascade&nbsp;=&nbsp;</SPAN><SPAN 
class=string>"d:/haarcascade_frontalface_alt2.xml"</SPAN><SPAN>; 
                &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=comment>//人脸检测，前两个参数为可检测的最小人脸的宽度和高度 </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=comment>//返回值为人脸在图中的坐标和宽高，{x,&nbsp;y,&nbsp;width,&nbsp;height} </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=keyword>int</SPAN><SPAN>[]&nbsp;faces&nbsp;=&nbsp;open.detectFace(</SPAN><SPAN 
class=number>40</SPAN><SPAN>,&nbsp;</SPAN><SPAN 
class=number>40</SPAN><SPAN>,&nbsp;cascade,&nbsp;filename); &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=keyword>if</SPAN><SPAN>(faces&nbsp;!=&nbsp;</SPAN><SPAN 
class=keyword>null</SPAN><SPAN>&nbsp;&amp;&amp;&nbsp;faces.length!=</SPAN><SPAN 
class=number>0</SPAN><SPAN>){ &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=comment>//返回的人脸总数 </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&nbsp;</SPAN><SPAN 
class=string>"faces&nbsp;"</SPAN><SPAN>&nbsp;+&nbsp;faces.length/</SPAN><SPAN 
class=number>4</SPAN><SPAN>&nbsp;); &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=comment>//分别输出每个人脸的坐标信息 </SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>for</SPAN><SPAN>&nbsp;(</SPAN><SPAN 
class=keyword>int</SPAN><SPAN>&nbsp;temp&nbsp;:&nbsp;faces)&nbsp;{ &nbsp;&nbsp;</SPAN></SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(temp); &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;</SPAN></LI>
              <LI><SPAN>}&nbsp;&nbsp;</SPAN></LI>
            </OL>
          </DIV>
          <PRE class=java style="DISPLAY: none" name="code">package lveyo.bcndyl.jni.opencv;

public class Test {

	public static void main(String[] args) {
		
		//初始化JNI调用类JNIOpencv
		JNIOpencv open = new JNIOpencv("jniOpenCV");

		//要检测的图片文件
		String filename = "d:/80010.jpg";

		//OpenCv提供的人间的特征文件
		String cascade = "d:/haarcascade_frontalface_alt2.xml";

		//人脸检测，前两个参数为可检测的最小人脸的宽度和高度
		//返回值为人脸在图中的坐标和宽高，{x, y, width, height}
		int[] faces = open.detectFace(40, 40, cascade, filename);
		if(faces != null &amp;&amp; faces.length!=0){

			//返回的人脸总数
			System.out.println( "faces " + faces.length/4 );

			//分别输出每个人脸的坐标信息
			for (int temp : faces) {
				System.out.println(temp);
			}
		}
	}
}

</PRE>
        </DIV>
        <!--EndFragment--></DIV>
    </DIV>
  </DIV>
</DIV>
</BODY>
</HTML>