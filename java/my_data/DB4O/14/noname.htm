<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML>
<HEAD id=Head>
<title>db4o 之旅: 深入 db4o “db4o 之旅（三）”</title>
<LINK 
id=MainCss href="style.css" 
type=text/css rel=stylesheet>
<LINK id=SecondaryCss 
href="customcss.aspx" type=text/css 
rel=stylesheet>
<LINK id=RSSLink title=RSS 
href="rss.aspx" type=application/rss+xml 
rel=alternate>
</HEAD>

<BODY>
<!--StartFragment-->
<FORM id=Form1 name=Form1 action=91052.html method=post 
_initialAction="91052.html">
  <DIV>
    <INPUT id=__EVENTTARGET type=hidden name=__EVENTTARGET>
    <INPUT 
id=__EVENTARGUMENT type=hidden name=__EVENTARGUMENT>
    <INPUT 
id="&#13;&#10;__VIEWSTATE" type=hidden name=__VIEWSTATE>
  </DIV>
  <DIV id=top>
    <DIV>
      <TABLE>
        <TBODY>
          <TR>
            <TD class=HeaderTitles><H1 class=HeaderTitle><A class=HeaderMainTitle id=Header1_HeaderTitle 
href="http://www.blogjava.net/rosen/"><B>成都心情</B></A></H1>
              <P id=tagline>骄傲、贪婪、迷色、忿怒、嫉妒、贪饕、懒惰――七宗罪<BR>
                本 Blog 是从：http://blog.csdn.net/rosen 
                搬来。</P></TD>
          </TR>
        </TBODY>
      </TABLE>
    </DIV>
    <DIV class=HeaderBar>
      <TABLE class=HeaderBar id=HeaderBar cellSpacing=0 cellPadding=0>
        <TBODY>
          <TR>
            <TD class=HeaderBarTab noWrap>&nbsp; <A id=Header1_MyLinks1_HomeLink 
href="">BlogJava</A>&nbsp;:: <A 
id=Header1_MyLinks1_MyHomeLink href="http://www.blogjava.net/rosen/">首页</A>&nbsp;:: 
              &nbsp;:: &nbsp;:: <A id=Header1_MyLinks1_Syndication 
href="http://www.blogjava.net/rosen/rss">聚合</A> <A class=XMLLink 
id=Header1_MyLinks1_XMLLink href="http://www.blogjava.net/rosen/rss"><IMG 
style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
src="xml.gif"></A>&nbsp;:: <A 
id=Header1_MyLinks1_Admin 
href="http://www.blogjava.net/rosen/admin/EditPosts.aspx">管理</A>&nbsp;:: </TD>
            <TD><IMG id=Header1_BlueTab 
style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
src="BlueTabRight.gif" 
align=absMiddle></TD>
            <TD class=HeaderBarTabBack noWrap width="100%"><DIV class=BlogStatsBar>
                <TABLE class=BlogStatsBar>
                  <TBODY>
                    <TR>
                      <TD width="100%"></TD>
                      <TD class=BlogStatsBar noWrap>&nbsp; 61 随笔&nbsp;:: 2 文章 :: 137 评论 :: 1 Trackbacks </TD>
                    </TR>
                  </TBODY>
                </TABLE>
              </DIV></TD>
          </TR>
        </TBODY>
      </TABLE>
    </DIV>
  </DIV>
  <DIV id=leftmenu style="DISPLAY: inline">
    <H3>公告</H3>
    <DIV class=News><A 
href="http://www.db4o.com/community/professionals/dVP/directory2007.aspx" 
target=_blank><IMG title="db4o Most Valued Professional" 
src="dVP-Badge-2007.gif" 
border=0></IMG> </A><BR>
      <BR>
      <IFRAME id=ifm2 align=center marginWidth=0 
marginHeight=0 src="ss166.htm" frameBorder=0 width=174 
scrolling=no height=190></IFRAME>
      <BR>
      <BR>
      <A href="http://www.51.la/?298319" target=_blank><IMG 
style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none" 
alt="51.la 专业、免费、强健的访问统计" src="icon_11.gif"></A> 
      <IMG style="WIDTH: 0px; HEIGHT: 0px" 
src="91052.html">
      <NOSCRIPT>
      <a href="http://www.51.la/?298319" target="_blank"><img alt="&#x6211;&#x8981;&#x5566;&#x514D;&#x8D39;&#x7EDF;&#x8BA1;" src="298319.asp" style="border:none" /></a>
      </NOSCRIPT>
    </DIV>
    <H3>常用链接</H3>
    <UL>
      <LI><A id=SingleColumn1_ctl00_repeaterLinks_ctl01_lnkLinkItem 
href="http://www.blogjava.net/rosen/MyPosts.html">我的随笔</A>
      <LI><A id=SingleColumn1_ctl00_repeaterLinks_ctl02_lnkLinkItem 
href="http://www.blogjava.net/rosen/MyComments.html">我的评论</A>
      <LI><A id=SingleColumn1_ctl00_repeaterLinks_ctl03_lnkLinkItem 
href="http://www.blogjava.net/rosen/OtherPosts.html">我参与的随笔</A> </LI>
    </UL>
    <H3>随笔分类<SPAN style="FONT-WEIGHT: normal; FONT-SIZE: 11px">(62)</SPAN></H3>
    <UL>
      <LI><A id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl01_Link 
href="13739.html">db4o 中文项目(6)</A> <A 
id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl01_RssLink 
title="Subscribe to db4o 中文项目(6)" 
href="http://www.blogjava.net/rosen/category/13739.html/rss">(rss)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl02_Link 
href="2689.html">Java EE 服务器端(13)</A> <A 
id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl02_RssLink 
title="Subscribe to Java EE 服务器端(13)" 
href="http://www.blogjava.net/rosen/category/2689.html/rss">(rss)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl03_Link 
href="2686.html">Java EE 表现层及容器(6)</A> <A 
id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl03_RssLink 
title="Subscribe to Java EE 表现层及容器(6)" 
href="http://www.blogjava.net/rosen/category/2686.html/rss">(rss)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl04_Link 
href="2690.html">Java 基础(5)</A> <A 
id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl04_RssLink 
title="Subscribe to Java 基础(5)" 
href="http://www.blogjava.net/rosen/category/2690.html/rss">(rss)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl05_Link 
href="7219.html">MatLab(1)</A> <A 
id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl05_RssLink 
title="Subscribe to MatLab(1)" 
href="http://www.blogjava.net/rosen/category/7219.html/rss">(rss)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl06_Link 
href="2688.html">O/R Mapping(13)</A> <A 
id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl06_RssLink 
title="Subscribe to O/R Mapping(13)" 
href="http://www.blogjava.net/rosen/category/2688.html/rss">(rss)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl07_Link 
href="2685.html">五花八门(2)</A> <A 
id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl07_RssLink 
title="Subscribe to 五花八门(2)" 
href="http://www.blogjava.net/rosen/category/2685.html/rss">(rss)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl08_Link 
href="2684.html">工作流(10)</A> <A 
id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl08_RssLink 
title="Subscribe to 工作流(10)" 
href="http://www.blogjava.net/rosen/category/2684.html/rss">(rss)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl09_Link 
href="2682.html">数据库(2)</A> <A 
id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl09_RssLink 
title="Subscribe to 数据库(2)" 
href="http://www.blogjava.net/rosen/category/2682.html/rss">(rss)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl10_Link 
href="2683.html">模式与策略(4)</A> <A 
id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl10_RssLink 
title="Subscribe to 模式与策略(4)" 
href="http://www.blogjava.net/rosen/category/2683.html/rss">(rss)</A> </LI>
    </UL>
    <H3>随笔档案<SPAN style="FONT-WEIGHT: normal; FONT-SIZE: 11px">(61)</SPAN></H3>
    <UL>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl01_Link 
href="02.html">2007年2月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl02_Link 
href="01.html">2007年1月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl03_Link 
href="12.html">2006年12月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl04_Link 
href="11.html">2006年11月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl05_Link 
href="10.html">2006年10月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl06_Link 
href="09.html">2006年9月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl07_Link 
href="08.html">2006年8月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl08_Link 
href="07.html">2006年7月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl09_Link 
href="06.html">2006年6月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl10_Link 
href="05.html">2006年5月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl11_Link 
href="04.html">2006年4月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl12_Link 
href="03.html">2006年3月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl13_Link 
href="02.html">2006年2月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl14_Link 
href="01.html">2006年1月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl15_Link 
href="12.html">2005年12月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl16_Link 
href="11.html">2005年11月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl17_Link 
href="10.html">2005年10月 (1)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl18_Link 
href="09.html">2005年9月 (2)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl19_Link 
href="08.html">2005年8月 (42)</A> </LI>
    </UL>
    <H3>文章分类<SPAN style="FONT-WEIGHT: normal; FONT-SIZE: 11px">(2)</SPAN></H3>
    <UL>
      <LI><A id=SingleColumn1_Categories_CatList_ctl02_LinkList_ctl01_Link 
href="3474.html">我的收藏(2)</A> <A 
id=SingleColumn1_Categories_CatList_ctl02_LinkList_ctl01_RssLink 
title="Subscribe to 我的收藏(2)" 
href="http://www.blogjava.net/rosen/category/3474.html/rss">(rss)</A> </LI>
    </UL>
    <H3>友情链接</H3>
    <UL>
      <LI><A id=SingleColumn1_Categories_CatList_ctl03_LinkList_ctl01_Link 
href="" target=_blank>david.turing</A> <A 
id=SingleColumn1_Categories_CatList_ctl03_LinkList_ctl01_RssLink 
title="Subscribe to david.turing" 
href="http://www.blogjava.net/openssl/Rss.aspx">(rss)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl03_LinkList_ctl02_Link 
href="wyingquan" target=_blank>wyingquan的专栏</A> <A 
id=SingleColumn1_Categories_CatList_ctl03_LinkList_ctl02_RssLink 
title="Subscribe to wyingquan的专栏" 
href="http://blog.csdn.net/wyingquan/Rss.aspx">(rss)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl03_LinkList_ctl03_Link 
href="" target=_blank>喜马拉雅的雪杉</A> <A 
id=SingleColumn1_Categories_CatList_ctl03_LinkList_ctl03_RssLink 
title="Subscribe to 喜马拉雅的雪杉" 
href="http://spaces.msn.com/members/Deodar/feed.rss">(rss)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl03_LinkList_ctl04_Link 
href="mmwy" target=_blank>无聊人士</A> <A 
id=SingleColumn1_Categories_CatList_ctl03_LinkList_ctl04_RssLink 
title="Subscribe to 无聊人士" href="http://www.blogjava.net/mmwy/Rss.aspx">(rss)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl03_LinkList_ctl05_Link 
href="" target=_blank>竹十一</A> <A 
id=SingleColumn1_Categories_CatList_ctl03_LinkList_ctl05_RssLink 
title="Subscribe to 竹十一" href="http://juleven.blogspot.com/rss.xml">(rss)</A>
      <LI><A id=SingleColumn1_Categories_CatList_ctl03_LinkList_ctl06_Link 
href="blog.asp_name=hongrui" 
target=_blank>邢红瑞的blog</A> <A 
id=SingleColumn1_Categories_CatList_ctl03_LinkList_ctl06_RssLink 
title="Subscribe to 邢红瑞的blog" 
href="http://blogger.org.cn/blog/rss2.asp?name=hongrui">(rss)</A> </LI>
    </UL>
    <H3>积分与排名</H3>
    <UL>
      <LI>积分 - 68829
      <LI>排名 - 36 </LI>
    </UL>
    <H3>最新评论 <A id=SingleColumn1__1d1c97b_RSSHyperlink1 
href="http://www.blogjava.net/rosen/CommentsRSS.aspx"><IMG 
style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
src="xml.gif"></A></H3>
    <DIV class=RecentComment>
      <UL>
        <LI style="WORD-BREAK: break-all"><A 
id=SingleColumn1__1d1c97b_CommentList_ctl01_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2007/03/19/101226.html#104739">1.&nbsp;re: 
          Spring 数据访问对象(Data Access Object,DAO)框架入门（翻译）</A>
        <LI style="WORD-BREAK: break-all">用来入门还不错，赞。
        <LI style="MARGIN-RIGHT: 4px; TEXT-ALIGN: right">--checker
        <LI style="WORD-BREAK: break-all"><A 
id=SingleColumn1__1d1c97b_CommentList_ctl02_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2007/03/05/91052.html#101919">2.&nbsp;re: 
          开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）”</A>
        <LI style="WORD-BREAK: break-all">评论内容较长,点击标题查看
        <LI style="MARGIN-RIGHT: 4px; TEXT-ALIGN: right">--Rosen
        <LI style="WORD-BREAK: break-all"><A 
id=SingleColumn1__1d1c97b_CommentList_ctl03_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2007/03/05/91052.html#101905">3.&nbsp;re: 
          开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）”</A>
        <LI style="WORD-BREAK: break-all">评论内容较长,点击标题查看
        <LI style="MARGIN-RIGHT: 4px; TEXT-ALIGN: right">--Sha Jiang
        <LI style="WORD-BREAK: break-all"><A 
id=SingleColumn1__1d1c97b_CommentList_ctl04_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2007/02/27/91052.html#100988">4.&nbsp;re: 
          开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）”</A>
        <LI style="WORD-BREAK: break-all">@lqixv<BR>
          这个倒是完全可以的。
        <LI style="MARGIN-RIGHT: 4px; TEXT-ALIGN: right">--Rosen
        <LI style="WORD-BREAK: break-all"><A 
id=SingleColumn1__1d1c97b_CommentList_ctl05_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2007/02/27/91052.html#100909">5.&nbsp;re: 
          开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）”</A>
        <LI style="WORD-BREAK: break-all">想知道，现在的 db4o 能不能代替 access 进行 web 开发？
        <LI style="MARGIN-RIGHT: 4px; TEXT-ALIGN: right">--lqixv </LI>
      </UL>
    </DIV>
    <H3>阅读排行榜</H3>
    <DIV class=RecentComment>
      <UL style="WORD-BREAK: break-all">
        <LI><A id=SingleColumn1__11112fa_TopList_ctl01_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2005/08/12/9937.aspx">1.&nbsp;Hibernate、iBATIS 
          与 BLOB(4507)</A>
        <LI><A id=SingleColumn1__11112fa_TopList_ctl02_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2005/08/12/9880.aspx">2.&nbsp;OSWorkflow 
          探索(4456)</A>
        <LI><A id=SingleColumn1__11112fa_TopList_ctl03_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2005/09/11/12668.aspx">3.&nbsp;Drools 
          为你的业务逻辑提供框架（翻译）(3541)</A>
        <LI><A id=SingleColumn1__11112fa_TopList_ctl04_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2006/04/30/44209.aspx">4.&nbsp;工作流理论总结(3171)</A>
        <LI><A id=SingleColumn1__11112fa_TopList_ctl05_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2005/09/19/13317.aspx">5.&nbsp;Hibernate 
          3 Formulas（翻译）(2878)</A> </LI>
      </UL>
    </DIV>
    <H3>评论排行榜</H3>
    <DIV class=RecentComment>
      <UL style="WORD-BREAK: break-all">
        <LI><A id=SingleColumn1__23c9891_TopList_ctl01_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2005/08/12/9880.aspx">1.&nbsp;OSWorkflow 
          探索(21)</A>
        <LI><A id=SingleColumn1__23c9891_TopList_ctl02_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2006/06/15/53094.aspx">2.&nbsp;开源面向对象数据库 
          db4o 之旅: 初识 db4o“db4o 之旅（一）”(21)</A>
        <LI><A id=SingleColumn1__23c9891_TopList_ctl03_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2005/08/12/9949.aspx">3.&nbsp;精确截取字符串（转载）(11)</A>
        <LI><A id=SingleColumn1__23c9891_TopList_ctl04_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2005/09/11/12668.aspx">4.&nbsp;Drools 
          为你的业务逻辑提供框架（翻译）(8)</A>
        <LI><A id=SingleColumn1__23c9891_TopList_ctl05_Hyperlink1 
href="http://www.blogjava.net/rosen/archive/2005/12/17/24348.aspx">5.&nbsp;BIRT 
          总览（翻译）(6)</A> </LI>
      </UL>
    </DIV>
    <!--
	<br><br>
	<p align="center">
	<a href="http://www.webhost4life.com/default.asp?refid=MarkHWagner">
	<img src="banner3.gif" width="120"
	height="60" border="0" alt="Join WebHost4Life.com"></a>
	</p>
--></DIV>
  <DIV id=main>
    <DIV class=post>
      <DIV class=postTitle><A id=viewpost1_TitleUrl 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html">开源面向对象数据库 
        db4o 之旅: 深入 db4o “db4o 之旅（三）”</A> </DIV>
      <DIV class=postText>
        <P><A name=N10082><SPAN class=atitle><STRONG><FONT size=4>前言</FONT> </STRONG></SPAN></A></P>
        <P>在开源面向对象数据库 <A 
href="http://www.ibm.com/developerworks/cn/java/j-db4o/"><I><FONT color=#996699>db4o 之旅</FONT></I></A> 系列文章的第 1 部分：<A 
href="http://www.ibm.com/developerworks/cn/java/j-lo-db4o1/"><FONT color=#5c81a7>初识 db4o</FONT></A> 中，作者介绍了 db4o 的历史和现状，应用领域，以及和 ORM 等的比较； 在第 2 
          部分：<A href="http://www.ibm.com/developerworks/cn/java/j-lo-db4o2/"><FONT color=#996699>db4o 查询方式</FONT></A>中, 作者介绍了 db4o 的三种不同的查询方式：QBE、SODA 以及 Native 
          Queries，并分别通过这三种不同的途径实现了两个关联对象的查询。</P>
        <P>前面我们已经介绍了如何在 db4o 中查询以及添加对象，在本文中我们将会向您介绍在 db4o 中如何对对象进行更新以及删除操作。<BR>
          &nbsp;</P>
        <P><A name=N1009C><FONT size=4><STRONG><SPAN class=atitle>更新数据</SPAN> </STRONG></FONT></A></P>
        <P><B>场景一</B> </P>
        <P>我们来设想这样的场景：一位名叫“张三”的人买了车，并上好了牌照（如本系列第二部分之代码），而他基本信息的地址并不详细，只写了“成都市”，在一次主管部门检查此人信息的时候，发现了这个问题，并立即着手修改。</P>
        <P>在 db4o 中，我们这样来实现对这个用户信息的修改（<A 
href="http://www-128.ibm.com/developerworks/cn/java/j-lo-db4o3/index.html#code1"><FONT color=#5c81a7>清单1</FONT></A>）：</P>
        <P><BR>
          <A name=code1><B>清单1. 修改地址</B> </A><BR>
        </P>
        <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
          <TBODY>
            <TR>
              <TD class=code-outline><PRE class=displaycode>				
package com;

import bo.People;

import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import com.db4o.query.Predicate;

public class DB4OTest{
	
	public static void main(String[] args){
		//打开数据库
		ObjectContainer db = Db4o.openFile("auto.yap");
		try{
			ObjectSet&lt;People&gt; result = db.query(new Predicate&lt;People&gt;() {
			    public boolean match(People people) {
			        return people.getName().equals("张三");
			    }
			});
			People people = result.next();
			//修改地址
			people.setAddress("成都市金牛区xxx号");
			db.set(people);
		}finally{
			//关闭连接
			db.close();
		}
	}
}
</PRE></TD>
            </TR>
          </TBODY>
        </TABLE>
        <BR>
        <P>修改数据是如此的简单，通过 NQ 查询出 People 对象，接着修改其地址，最后保存即可。现在我们来看看修改是否成功, 打开 ObjectManager 
          ，如<A 
href="http://www-128.ibm.com/developerworks/cn/java/j-lo-db4o3/index.html#fig1"><FONT color=#5c81a7>图 1</FONT></A> 所示，我们可以看到数据库里的用户数据已经更新了。</P>
        <P><BR>
          <A name=fig1><B>图1. 修改地址</B> </A><BR>
          <BR>
          <IMG height=388 alt=db4o31.jpg 
src="db4o31.jpg" width=552 border=0> </P>
        <P>与本系列文章第二部分不同的是，我们利用 ObjectSet&lt;People&gt; result 来获取返回结果，而不是 
          List&lt;People&gt; list。查阅 ObjectSet 的 API 我们发现 ObjectSet 实际上继承了 java.util.List 
          和 java.util.Iterator。为什么要继承两个接口？这是由于 db4o 为了方便开发者而有意这样设计的，db4o 
          的设计目标就是轻量级，这样的继承方式为 ObjectSet 提供了多种特性，而无需开发者在多个集合接口之间转换。</P>
        <P><B>场景二</B> </P>
        <P>让我们考虑下面这个场景:<BR>
          由于工作原因，“张三”要离开省会去其他城市发展，他的汽车也要在那里使用，为了方便，他还是决定重新更换为本地牌照。 </P>
        <P>这次我们几乎和场景一采用同样的代码，但结果却不同（<A 
href="http://www-128.ibm.com/developerworks/cn/java/j-lo-db4o3/index.html#code2"><FONT color=#5c81a7>清单2</FONT></A>）：</P>
        <P><BR>
          <A name=code2><B>清单2. 修改地址和车牌（不成功）</B> </A><BR>
        </P>
        <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
          <TBODY>
            <TR>
              <TD class=code-outline><PRE class=displaycode>				
package com;

import bo.People;

import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import com.db4o.query.Predicate;

public class DB4OTest{
	
	public static void main(String[] args){
		//打开数据库
		ObjectContainer db = Db4o.openFile("auto.yap");
		try{
			ObjectSet&lt;People&gt; result = db.query(new Predicate&lt;People&gt;() {
			    public boolean match(People people) {
			        return people.getName().equals("张三");
			    }
			});
			People people = result.next();
			//修改地址
			people.setAddress("绵阳市xx区xxx号");
			//修改车牌号
			people.getAutoInfoList().get(0).setLicensePlate("川B00000");
			db.set(people);
		}finally{
			//关闭连接
			db.close();
		}
	}
}
</PRE></TD>
            </TR>
          </TBODY>
        </TABLE>
        <BR>
        <P>想必应该保存成功了吧，只是多加入了设置车牌的代码。打开 ObjectManager，如<A 
href="http://www-128.ibm.com/developerworks/cn/java/j-lo-db4o3/index.html#fig2"><FONT color=#5c81a7>图 2</FONT></A> 所示。很奇怪，地址保存成功了，而车牌却根本没变化。</P>
        <P><BR>
          <A name=fig2><B>图2. 修改地址和车牌（不成功）</B> </A><BR>
          <BR>
          <IMG height=391 
alt=db4o32.jpg src="db4o32.jpg" width=564 border=0> </P>
        <P>其实这也是 db4o 的有意安排。设想一个复杂对象有很多成员，并且这些成员又有自己的成员。当更新该对象，db4o 
          将不得不更新其所有的关联对象、关联对象的关联对象，等等。这将引起严重的性能惩罚，而且在大部分的情况下是没有必要这样的。</P>
        <P>db4o 引入了“更新深度(update depth)”这一概念来控制被更新的对象成员树深度。默认的更新深度是 1，这就意味着只有基本类型和 String 
          类型的成员变量可以被更新，而修改对象成员将得不到任何反映，例如本例中修改 People 对象的 _autoInfoList 成员。</P>
        <P>为了能更新成员对象，ob4o 提供了 cascadeOnUpdate() 方法，该方法必须在每次开启数据库之前设置<A 
href="http://www-128.ibm.com/developerworks/cn/java/j-lo-db4o3/index.html#code3"><FONT color=#5c81a7>清单3</FONT></A>：</P>
        <P><BR>
          <A name=code3><B>清单3. 修改地址和车牌（成功）</B> </A><BR>
        </P>
        <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
          <TBODY>
            <TR>
              <TD class=code-outline><PRE class=displaycode>				
package com;

import bo.People;

import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import com.db4o.query.Predicate;

public class DB4OTest{
	
	public static void main(String[] args){
        //级联设置
		Db4o.configure().objectClass("bo.People")
        .cascadeOnUpdate(true);
		//打开数据库
		ObjectContainer db = Db4o.openFile("auto.yap");
		try{
			ObjectSet&lt;People&gt; result = db.query(new Predicate&lt;People&gt;() {
			    public boolean match(People people) {
			        return people.getName().equals("张三");
			    }
			});
			People people = result.next();
			//修改地址
			people.setAddress("绵阳市xx区xxx号");
			//修改车牌号
			people.getAutoInfoList().get(0).setLicensePlate("川B00000");
			db.set(people);
		}finally{
			//关闭连接
			db.close();
		}
	}
}
</PRE></TD>
            </TR>
          </TBODY>
        </TABLE>
        <BR>
        <P>这下终于如愿以偿，如<A 
href="http://www-128.ibm.com/developerworks/cn/java/j-lo-db4o3/index.html#fig3"><FONT color=#5c81a7>图 3</FONT></A> 所示。其实 db4o 为开发者想得很周到，关键是如何用好这些特性。</P>
        <P><BR>
          <A name=fig3><B>图3. 修改地址和车牌（成功）</B> </A><BR>
          <BR>
          <IMG height=379 
alt=db4o33.jpg src="db4o33.jpg" width=553 border=0> <BR>
        </P>
        <P><A name=N10132><SPAN class=atitle><FONT size=4><STRONG>删除数据</STRONG> </FONT></SPAN></A></P>
        <P><B>场景三</B> </P>
        <P>“张三”换了工作后，事业发展很快，准备把车卖了换新的，于是他去交管部门办理移交手续，删除关联的车辆信息<A 
href="http://www-128.ibm.com/developerworks/cn/java/j-lo-db4o3/index.html#code4"><FONT color=#5c81a7>清单4</FONT></A>：</P>
        <P><BR>
          <A name=code4><B>清单4. 删除车辆</B> </A><BR>
        </P>
        <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
          <TBODY>
            <TR>
              <TD class=code-outline><PRE class=displaycode>				
package com;

import bo.AutoInfo;

import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import com.db4o.query.Predicate;

public class DB4OTest{
	
	public static void main(String[] args){
		//打开数据库
		ObjectContainer db = Db4o.openFile("auto.yap");
		try{
			ObjectSet&lt;AutoInfo&gt; result = db.query(new Predicate&lt;AutoInfo&gt;() {
			    public boolean match(AutoInfo ai) {
			    	//匹配姓名和车牌号
			        return ai.getLicensePlate().equals("川B00000") 
			        	   &amp;&amp; ai.getOwnerNo().getName().equals("张三");
			    }
			});
			AutoInfo ai = result.next();
			//删除车辆信息
			db.delete(ai);
		}finally{
			//关闭连接
			db.close();
		}
	}
}
</PRE></TD>
            </TR>
          </TBODY>
        </TABLE>
        <BR>
        <P>如<A 
href="http://www-128.ibm.com/developerworks/cn/java/j-lo-db4o3/index.html#fig4"><FONT color=#5c81a7>图 4</FONT></A> 所示，所关联的车辆信息已被删除了。</P>
        <P><BR>
          <A name=fig4><B>图4. 删除车辆信息</B> </A><BR>
          <BR>
          <IMG height=379 alt=db4o34.jpg 
src="db4o34.jpg" width=553 border=0> </P>
        <P><B>场景四</B> </P>
        <P>在场景三的基础上修改一下，设想“张三”由于工作不顺，导致最后维护汽车的开支都困难，他不得不退出有车一族的行列<A 
href="http://www-128.ibm.com/developerworks/cn/java/j-lo-db4o3/index.html#code5"><FONT color=#5c81a7>清单5</FONT></A>：</P>
        <P><BR>
          <A name=code5><B>清单5. 删除所有信息</B> </A><BR>
        </P>
        <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
          <TBODY>
            <TR>
              <TD class=code-outline><PRE class=displaycode>				
package com;

import bo.People;

import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import com.db4o.query.Predicate;

public class DB4OTest{
	
	public static void main(String[] args){
        //级联设置
		Db4o.configure().objectClass("bo.People")
        .cascadeOnDelete(true);
		//打开数据库
		ObjectContainer db = Db4o.openFile("auto.yap");
		try{
			ObjectSet&lt;People&gt; result = db.query(new Predicate&lt;People&gt;() {
			    public boolean match(People people) {
			    	//匹配姓名
			        return people.getName().equals("张三");
			    }
			});
			People people = result.next();
			//删除车主以及关联的车辆信息
			db.delete(people);
		}finally{
			//关闭连接
			db.close();
		}
	}
}
</PRE></TD>
            </TR>
          </TBODY>
        </TABLE>
        <BR>
        <P>用过 Hibernate 的开发者都知道，它的级联删除让人留下了深刻印象，第一次使用的时候都会为之振奋。db4o 
          也为开发者提供了级联删除，和场景二的级联更新一样， cascadeOnDelete() 是专门为删除准备的，基本概念和 cascadeOnUpdate() 
          一致。打开 ObjectManager 我们会发现数据库已经清空了，张三的购车经历到此结束。<BR>
          &nbsp;</P>
        <P><A name=N1017F><SPAN class=atitle><FONT size=4><STRONG>结论</STRONG> </FONT></SPAN></A></P>
        <P>通过本系列文章，db4o 的优势已经体现得淋漓尽致，它的添加、更新、删除是如此的简单，正如 db4o 
          的口号那样――“仅需一行代码就能存储复杂结构对象，极大的降低了开发时间和成本，提供高效的性能，无需 DBA 干预”。</P>
        <P>如本文有不详尽之处，大家可以参考官方的《用户指南》或访问 <A 
href="http://developer.db4o.com/forums/10/ShowForum.aspx"><FONT color=#5c81a7>db4o 官方中文论坛</FONT></A>，db4o 中文社区正在火热成长！<BR>
          &nbsp;</P>
        <P><A name=resources><SPAN class=atitle><FONT size=4><STRONG>参考资料</STRONG> </FONT></SPAN></A></P>
        <P><B>学习</B> <BR>
        </P>
        <UL>
          <LI>db4o <A href="http://www.db4o.com/"><FONT color=#996699>官方网站</FONT></A> 。<BR>
            <BR>
          <LI><A href="http://www.ibm.com/developerworks/cn/java/j-db4o/"><I><FONT color=#996699>面向对象数据库 db4o 之旅系列</FONT> </I></A>：查看此系列文章完整列表。<BR>
            <BR>
          <LI><A href="http://www.odmg.org/"><FONT color=#5c81a7>ODMG 官方网站</FONT> </A>：了解 
            ODMG 技术。<BR>
            <BR>
          <LI><A href="http://www.ibm.com/developerworks/cn/java/"><FONT color=#5c81a7>developerWorks Java 技术专区</FONT> </A>：数百篇关于 Java 编程各个方面的文章。 <BR>
          </LI>
        </UL>
        <P><BR>
          <B>获得产品和技术</B> <BR>
        </P>
        <UL>
          <LI><A href="http://www.db4o.com/china?src=cn"><FONT color=#5c81a7>下载 db4o 
            免费版</FONT> </A>。<BR>
          </LI>
        </UL>
        <P><BR>
          <B>讨论</B> <BR>
        </P>
        <UL>
          <LI>db4o <A href="http://developer.db4o.com/forums/"><FONT color=#5c81a7>开发者论坛</FONT></A>：讨论 db4o 技术。<BR>
            <BR>
          <LI><A 
href="http://www.ibm.com/developerworks/forums/dw_forum.jsp?forum=181&amp;cat=10"><FONT color=#5c81a7>developerWorks Java 论坛</FONT> </A>：学习 Java 技术。&nbsp;<BR>
            &nbsp; </LI>
        </UL>
        <P><A name=author><SPAN class=atitle><STRONG><FONT size=4>作者简介</FONT> </STRONG></SPAN></A></P>
        <P></P>
        <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
          <TBODY>
            <TR>
              <TD colSpan=3>&nbsp;</TD>
            </TR>
            <TR vAlign=top align=left>
              <TD><P></P></TD>
              <TD><IMG height=5 alt="" src="c.gif" width=4></TD>
              <TD width="100%"><P>Rosen Jiang 来自成都，是 db4o 和 OO 的忠实 fans，是 2005 年 db4o 的 dvp 获得者之一。他正在 J2me 
                  应用中使用 db4o，你可以通过 <A href="mailto:rosener_722@hotmail.com%3Fcc="><FONT color=#5c81a7>rosener_722@hotmail.com</FONT></A> 和他联系。</P></TD>
            </TR>
          </TBODY>
        </TABLE>
        <BR>
        <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
          <TBODY>
            <TR>
              <TD colSpan=3><IMG height=5 alt="" src="c.gif" 
width="100%"></TD>
            </TR>
            <TR vAlign=top align=left>
              <TD><P></P></TD>
              <TD><IMG height=5 alt="" src="c.gif" width=4></TD>
              <TD width="100%"><P>Chris 来自香港，热爱开源和 db4o。他创办了中国最火热的 Java 和开源社区 Matrix（http://www.Matrix.org.cn）， 
                  你可以通过 <A href="mailto:chris@Matrix.org.cn%3Fcc="><FONT color=#5c81a7>chris@Matrix.org.cn</FONT></A> 和他联系。</P></TD>
            </TR>
          </TBODY>
        </TABLE>
        <BR>
        <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
          <TBODY>
            <TR>
              <TD colSpan=3><IMG height=5 alt="" src="c.gif" 
width="100%"></TD>
            </TR>
            <TR vAlign=top align=left>
              <TD><P></P></TD>
              <TD><IMG height=5 alt="" src="c.gif" width=4></TD>
              <TD width="100%"><P>张黄瞩，热爱开源软件，熟悉 Java/C/C++ 编程语言，对数据库技术网络技术均感兴趣。你可以通过 <A 
href="mailto:zhanghuangzhu@gmail.com%3Fcc="><FONT color=#5c81a7>zhanghuangzhu@gmail.com</FONT></A> 联系他。</P></TD>
            </TR>
          </TBODY>
        </TABLE>
        <BR>
        <STRONG><FONT face=Arial color=#ff0000>IBM 
        DeveloperWorks(IBM DW) 版权所有！引用、转贴本文应注明本文来自 IBM DW。</FONT> </STRONG></DIV>
      <DIV class=postfoot>posted on 2006-12-30 19:11 <A 
href="http://www.blogjava.net/rosen/">Rosen</A> 阅读(838) <A 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#Post">评论(6)</A> &nbsp;<A 
href="http://www.blogjava.net/rosen/admin/EditPosts.aspx?postid=91052">编辑</A>&nbsp;<A 
href="http://www.blogjava.net/rosen/AddToFavorite.aspx?id=91052">收藏</A> <A 
href="http://www.blogjava.net/rosen/services/trackbacks/91052.aspx">引用</A> 所属分类: <A href="http://www.blogjava.net/rosen/category/13739.html">db4o 中文项目</A> </DIV>
    </DIV>
    <IMG height=1 
src="91052.html_webview=1" width=1> <!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html"
dc:identifier="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html"
dc:title="开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）”"
trackback:ping="http://www.blogjava.net/rosen/services/trackbacks/91052.aspx" />
</rdf:RDF>
--> 
    
    <DIV id=AjaxHolder_UpdatePanel1><A name=pagedcomment></A><A name=评论><BR>
      <DIV id=comments>
        <H3>评论</H3>
        <DIV class=post>
          <DIV class=postTitle><A 
title="permalink: re: 开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）”" 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#99831">#</A>&nbsp;<A name=99831></A>re: 
            开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）” <SPAN>2007-02-14 15:30 </SPAN><A 
id=AjaxHolder_Comments_CommentList_ctl00_NameLink target=_blank>lqixv</A> </DIV>
          <DIV class=postText>我想问一下，是不是这个数据库不适合用来开发web ？因为我以前用过asp，很喜欢asp + 
            access的模式来开发小型应用。所以现在想找一个用在 java 方面的数据库。原来想用 Derby，后来发现 Derby 比 db4o 
            性能上差很多，因此又想用 db4o。但又看到一些文章，好像说 db4o 不适合用于 web 开发，因为其不能使用数据库连接池，不知是不是，请指教，谢谢。&nbsp;&nbsp;<A 
onclick='return SetReplyAuhor("lqixv")' 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#post">回复</A>&nbsp;&nbsp;<A title=查看该作者发表过的评论 
href="http://www.blogjava.net/comment?author=lqixv" target=_blank>更多评论</A> <BR>
            <A id=AjaxHolder_Comments_CommentList_ctl00_DeleteLink 
href="javascript___doPostBack('AjaxHolder$Comments$CommentList$ctl00$DeleteLink','')"></A>&nbsp;&nbsp;<A 
id=AjaxHolder_Comments_CommentList_ctl00_EditLink></A> </DIV>
        </DIV>
        <BR>
        <DIV class=post>
          <DIV class=postTitle><A 
title="permalink: re: 开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）”" 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#100185">#</A>&nbsp;<A name=100185></A>re: 
            开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）” <SPAN>2007-02-18 18:39 </SPAN><A 
id=AjaxHolder_Comments_CommentList_ctl01_NameLink 
href="" target=_blank>Rosen</A> </DIV>
          <DIV 
class=postText>@lqixv<BR>
            对于连接池我已经提交给db4o团队讨论过了，不过他们不赞成使用连接池方式，觉得这完全没有必要，以后的db4o会分成3个版本针对不同领域，相信随着C/S性能的提高，db4o可以应用在WEB 
            APP中。&nbsp;&nbsp;<A onclick='return SetReplyAuhor("Rosen")' 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#post">回复</A>&nbsp;&nbsp;<A title=查看该作者发表过的评论 
href="http://www.blogjava.net/comment?author=Rosen" target=_blank>更多评论</A> <BR>
            <A id=AjaxHolder_Comments_CommentList_ctl01_DeleteLink 
href="javascript___doPostBack('AjaxHolder$Comments$CommentList$ctl01$DeleteLink','')"></A>&nbsp;&nbsp;<A 
id=AjaxHolder_Comments_CommentList_ctl01_EditLink></A> </DIV>
        </DIV>
        <BR>
        <DIV class=post>
          <DIV class=postTitle><A 
title="permalink: re: 开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）”" 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#100909">#</A>&nbsp;<A name=100909></A>re: 
            开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）” <SPAN>2007-02-27 12:14 </SPAN><A 
id=AjaxHolder_Comments_CommentList_ctl02_NameLink target=_blank>lqixv</A> </DIV>
          <DIV class=postText>想知道，现在的 db4o 能不能代替 access 进行 web 开发？&nbsp;&nbsp;<A 
onclick='return SetReplyAuhor("lqixv")' 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#post">回复</A>&nbsp;&nbsp;<A title=查看该作者发表过的评论 
href="http://www.blogjava.net/comment?author=lqixv" target=_blank>更多评论</A> <BR>
            <A id=AjaxHolder_Comments_CommentList_ctl02_DeleteLink 
href="javascript___doPostBack('AjaxHolder$Comments$CommentList$ctl02$DeleteLink','')"></A>&nbsp;&nbsp;<A 
id=AjaxHolder_Comments_CommentList_ctl02_EditLink></A> </DIV>
        </DIV>
        <BR>
        <DIV class=post>
          <DIV class=postTitle><A 
title="permalink: re: 开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）”" 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#100988">#</A>&nbsp;<A name=100988></A>re: 
            开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）” <SPAN>2007-02-27 19:19 </SPAN><A 
id=AjaxHolder_Comments_CommentList_ctl03_NameLink 
href="" target=_blank>Rosen</A> </DIV>
          <DIV class=postText>@lqixv<BR>
            这个倒是完全可以的。&nbsp;&nbsp;<A 
onclick='return SetReplyAuhor("Rosen")' 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#post">回复</A>&nbsp;&nbsp;<A title=查看该作者发表过的评论 
href="http://www.blogjava.net/comment?author=Rosen" target=_blank>更多评论</A> <BR>
            <A id=AjaxHolder_Comments_CommentList_ctl03_DeleteLink 
href="javascript___doPostBack('AjaxHolder$Comments$CommentList$ctl03$DeleteLink','')"></A>&nbsp;&nbsp;<A 
id=AjaxHolder_Comments_CommentList_ctl03_EditLink></A> </DIV>
        </DIV>
        <BR>
        <DIV class=post>
          <DIV class=postTitle><A 
title="permalink: re: 开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）”" 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#101905">#</A>&nbsp;<A name=101905></A>re: 
            开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）” <SPAN>2007-03-05 14:18 </SPAN><A 
id=AjaxHolder_Comments_CommentList_ctl04_NameLink 
href="" target=_blank>Sha Jiang</A> </DIV>
          <DIV class=postText>&gt; 对于连接池我已经提交给db4o团队讨论过了，不过他们不赞成使用连接池方<BR>
            &gt; 
            式，觉得这完全没有必要<BR>
            为什么没有必要呢？<BR>
            <BR>
            对于Java/JDBC，“连接”一般是指javax.sql.Connection对象，<BR>
            那么对于db4o而言，它的“连接”对象可能是指什么呢？<BR>
            如果不存在着这么一种“对象”，或db4o在建立连接时，可能并不需做创建对象这样“昂贵”的工作。那么可能实现连接池就是“没有必要”的。&nbsp;&nbsp;<A 
onclick='return SetReplyAuhor("Sha Jiang")' 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#post">回复</A>&nbsp;&nbsp;<A title=查看该作者发表过的评论 
href="http://www.blogjava.net/comment?author=Sha+Jiang" target=_blank>更多评论</A> <BR>
            <A id=AjaxHolder_Comments_CommentList_ctl04_DeleteLink 
href="javascript___doPostBack('AjaxHolder$Comments$CommentList$ctl04$DeleteLink','')"></A>&nbsp;&nbsp;<A 
id=AjaxHolder_Comments_CommentList_ctl04_EditLink></A> </DIV>
        </DIV>
        <BR>
        <DIV class=post>
          <DIV class=postTitle><A 
title="permalink: re: 开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）”" 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#101919">#</A>&nbsp;<A name=101919></A>re: 
            开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）”<A name=Post></A> <SPAN>2007-03-05 15:01 </SPAN><A id=AjaxHolder_Comments_CommentList_ctl05_NameLink 
href="" target=_blank>Rosen</A> </DIV>
          <DIV class=postText>@Sha Jiang <BR>
            这个连接是 OC 对象实例，利用 apache common 提供的 pool 产品，或 
            java 自带的线程安全队列进行包装。 <BR>
            正如你说到的，以前 C/S 
            模式下建立连接是昂贵的，所以提出了这种概念，但是随着性能提高，这种概念是没有必要的了。&nbsp;&nbsp;<A 
onclick='return SetReplyAuhor("Rosen")' 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#post">回复</A>&nbsp;&nbsp;<A title=查看该作者发表过的评论 
href="http://www.blogjava.net/comment?author=Rosen" target=_blank>更多评论</A> <BR>
            <A id=AjaxHolder_Comments_CommentList_ctl05_DeleteLink 
href="javascript___doPostBack('AjaxHolder$Comments$CommentList$ctl05$DeleteLink','')"></A>&nbsp;&nbsp;<A 
id=AjaxHolder_Comments_CommentList_ctl05_EditLink></A> </DIV>
        </DIV>
        <BR>
      </DIV>
      <DIV id=AjaxHolder_Comments_divRefreshComments 
style="FONT-SIZE: 12px; MARGIN-BOTTOM: 5px; MARGIN-RIGHT: 10px; TEXT-ALIGN: right"><A 
id=AjaxHolder_Comments_refreshList 
href="javascript:__doPostBack('AjaxHolder$Comments$refreshList','')">刷新评论列表</A></DIV>
      <STYLE>
td { font-size: 12px }
.commentTextBox 
{ 
    font-family : Verdana; 
    font-size: 13px;
 }
</STYLE>
      <!--Beging Temp Save-->
      <STYLE>
.userData { BEHAVIOR: url(#default#userdata) }
	</STYLE>
      <DIV class=userData id=CommentsPersistDiv></DIV>
      
      <!--Ene TempSave-->
      <DIV class=commentform><SPAN id=AjaxHolder_PostComment_ltSubmitMsg 
style="COLOR: red"></SPAN><BR>
        <A name=Feedback></A>
        <TABLE cellSpacing=1 cellPadding=1 border=0>
          <TBODY>
            <TR>
              <TD width=75></TD>
              <TD></TD>
              <TD></TD>
            </TR>
            <TR>
              <TD width=55>标题</TD>
              <TD><INPUT class=commenttb id=AjaxHolder_PostComment_tbTitle 
style="WIDTH: 320px" value="re: 开源面向对象数据库 db4o 之旅: 深入 db4o “db4o 之旅（三）”" 
name=AjaxHolder$PostComment$tbTitle></TD>
              <TD><SPAN id=AjaxHolder_PostComment_RequiredFieldValidator1 
style="VISIBILITY: hidden; COLOR: red" 
controltovalidate="AjaxHolder_PostComment_tbTitle" errormessage="请输入标题" 
initialvalue isvalid="true">请输入标题</SPAN></TD>
            </TR>
            <TR>
              <TD>姓名</TD>
              <TD><INPUT class=commenttb id=AjaxHolder_PostComment_tbName style="WIDTH: 320px" 
name=AjaxHolder$PostComment$tbName></TD>
              <TD><SPAN id=AjaxHolder_PostComment_RequiredFieldValidator2 
style="VISIBILITY: hidden; COLOR: red" 
controltovalidate="AjaxHolder_PostComment_tbName" errormessage="请输入你的姓名" 
initialvalue isvalid="true">请输入你的姓名</SPAN></TD>
            </TR>
            <TR>
              <TD>主页</TD>
              <TD><INPUT class=commenttb id=AjaxHolder_PostComment_tbUrl style="WIDTH: 320px" 
name=AjaxHolder$PostComment$tbUrl></TD>
              <TD><FONT face=宋体></FONT></TD>
            </TR>
            <TR>
              <TD align=left colSpan=3><TABLE class=CommentForm id=AjaxHolder_PostComment_tbCaptchaImage cellSpacing=0 
cellPadding=0 border=0>
                  <TBODY>
                    <TR>
                      <TD colSpan=3><SPAN id=AjaxHolder_PostComment_Requiredfieldvalidator4 
style="DISPLAY: none; COLOR: red" 
controltovalidate="AjaxHolder_PostComment_CodeNumberTextBox" 
errormessage="请输入验证码" initialvalue display="Dynamic" 
isvalid="true">请输入验证码</SPAN> <SPAN id=AjaxHolder_PostComment_lblImage 
style="FONT-WEIGHT: bold; COLOR: red"></SPAN></TD>
                    </TR>
                    <TR>
                      <TD width=78>验证码</TD>
                      <TD><INPUT id=AjaxHolder_PostComment_CodeNumberTextBox 
name=AjaxHolder$PostComment$CodeNumberTextBox>
                        *</TD>
                      <TD align=left><IMG id=AjaxHolder_PostComment_Img1 
src="JpegImage.aspx"></TD>
                    </TR>
                  </TBODY>
                </TABLE></TD>
            </TR>
            <TR>
              <TD colSpan=3>内容(提交失败后,可以通过“恢复上次提交”恢复刚刚提交的内容) <SPAN 
id=AjaxHolder_PostComment_RequiredFieldValidator3 
style="VISIBILITY: hidden; COLOR: red" 
controltovalidate="AjaxHolder_PostComment_tbComment" errormessage="请输入评论内容" 
initialvalue isvalid="true">请输入评论内容</SPAN><BR>
                <TEXTAREA class=commentTextBox id=AjaxHolder_PostComment_tbComment onkeydown="ctlent(event,'AjaxHolder_PostComment_tbComment')" style="WIDTH: 480px; HEIGHT: 220px" name=AjaxHolder$PostComment$tbComment rows=10 cols=50></TEXTAREA></TD>
            </TR>
            <TR>
              <TD colSpan=3><SPAN id=AjaxHolder_PostComment_Message 
style="COLOR: red"></SPAN></TD>
            <TR>
              <TD colSpan=3><INPUT id=AjaxHolder_PostComment_chkRemember tabIndex=-1 
type=checkbox CHECKED name=AjaxHolder$PostComment$chkRemember>
                <LABEL 
for=AjaxHolder_PostComment_chkRemember>Remember Me?</LABEL></TD>
            </TR>
            <TR>
              <TD height=23><INPUT id=AjaxHolder_PostComment_btnSubmit onclick="TempSave('AjaxHolder_PostComment_tbComment');WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&quot;AjaxHolder$PostComment$btnSubmit&quot;, &quot;&quot;, true, &quot;&quot;, &quot;&quot;, false, false))" type=submit value=提交 name=AjaxHolder$PostComment$btnSubmit></TD>
              <TD colSpan=2 height=23>&nbsp; <A id=AjaxHolder_PostComment_lnkLogin 
href="http://www.blogjava.net/login.aspx?ReturnURL=http://www.blogjava.net/rosen/archive/2006/12/30/91052.html&amp;SourceURL=/rosen/archive/2006/12/30/91052.html">登录</A>&nbsp;&nbsp;<!--<a id="AjaxHolder_PostComment_linkLoginComment" OnClick="if(document.getElementById('AjaxHolder_PostComment_tbComment').value != '') return confirm('未提交的评论内容将会丢失, 你真的要进入高级评论吗?');" href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html?login=1#Post">使用高级评论</a>&nbsp;&nbsp;--><A 
href="http://www.blogjava.net/RequireRegister.aspx">新用户注册</A>&nbsp;&nbsp;<A 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#Top">返回页首</A>&nbsp;&nbsp;<A id=AjaxHolder_PostComment_lbRestore 
onclick="Restore('AjaxHolder_PostComment_tbComment'); return false;" 
href="http://www.blogjava.net/rosen/archive/2006/12/30/91052.html#Post">恢复上次提交</A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </TD>
            </TR>
            <TR>
              <TD colSpan=3>[使用Ctrl+Enter键可以直接提交]</TD>
            </TR>
            <TR>
              <TD colSpan=3 height=1></TD>
            </TR>
            <TR>
              <TD colSpan=3><BR>
                
                </TD>
            </TR>
            <TR>
              <TD colSpan=3></TD>
            </TR>
          </TBODY>
        </TABLE>
      </DIV>
      <DIV id=AjaxHolder_PostComment_ValidationSummary1 
style="DISPLAY: none; COLOR: red" showmessagebox="True" 
showsummary="False"></DIV>
    </DIV>
  </DIV>
  <P id=footer>Powered by: <BR>
    <A id=Footer1_Hyperlink3 
style="FONT-SIZE: 12px; FONT-FAMILY: Verdana" href="http://www.blogjava.net/" 
name=Hyperlink1>BlogJava</A> <BR>
    Copyright ? Rosen </P>
   
  
</FORM>

<!--EndFragment-->
</BODY>
</HTML>