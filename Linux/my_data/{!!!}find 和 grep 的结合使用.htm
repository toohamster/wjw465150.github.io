<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<HTML><HEAD>
<META HTTP-EQUIV=Content-Type CONTENT=text/html; charset=gb2312>
<title>{!!!}find 和 grep 的结合使用</title>
<style type="text/css">
<!--
.9t {font-size: 9pt; color: #000000; font-family: "宋体";}
-->
</style></HEAD>
<body bgcolor="#ffffff">
<P><FONT color=#008000><FONT style="BACKGROUND-COLOR: #c0c0c0"> 删除指定日期前的文件:&nbsp; find ./collection1/ -name 
"solr_*.zip" -mtime +7 -print | xargs rm -f 
</FONT></FONT>        
</P>
<P><FONT color=#008000><FONT style="BACKGROUND-COLOR: #c0c0c0"> 
        
</FONT></FONT>        
</P>
<P><FONT color=#008000><FONT style="BACKGROUND-COLOR: #c0c0c0">find 
/home/weblogic/bea/ -type f -print | xargs grep "ms3072m" 
</FONT></FONT>        
</P>
<P><FONT style="BACKGROUND-COLOR: #c0c0c0" color=#008000>find /aws/bin -type f -name *.xml -print | xargs grep -i 
"mysql"<BR></FONT></P>
<P>
<TABLE style="BORDER-COLLAPSE: collapse" borderColor=#000000 cellSpacing=0 
cellPadding=2 width="100%" border=1>
  
  <TR>
    <TD>
      <P><FONT style="BACKGROUND-COLOR: #ffff00">&nbsp;find到带空格文件名用xargs处理的技巧<BR></FONT>分类：<BR>find和xargs是最好的组合，可以说是linux 
      shell下的瑞士军刀，用xargs配合find，比直接用find的-exec参数，速度更快，用法也更直观。<BR>基本的用法比如：<BR>find 
      ./ -name '*.bak' | xargs rm -rf</P>
      <P>一般情况，上面这个命令运行的很好，但是如果找到的文件名代空格上面的命令运行就可能会出问题了有一个参数-print0，于默认的-print相比，输出的序列不是以空格分隔，而是以null字符分隔。而xargs也有一个参数-0，可以接受以null而非空格间隔的输入流。所以说xargs简直就是为find而生的。上面的问题就很好解决了：<BR>find 
      ./ -name '*.bak' -print0 | xargs -0 rm -rf</P></TD></TR></TABLE><BR>xargs - build and execute command lines from standard 
input<BR><BR>Find命令的一般形式为：<BR>find pathname -options [-print -exec 
-ok]<BR>让我们来看看该命令的参数：<BR><BR>参数 描述<BR>pathname 
find命令所查找的目录路径。例如用.来表示当前目录，用/来表示系统根目录。 <BR>-print find命令将匹配的文件输出到标准输出。<BR>-exec 
find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为command {} \;，注意{ }和\；之间的空格。<BR>-ok 
和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前，都会给出提示，让用户来确定是否执行。<BR><BR>options最常见选项：<BR><BR>option 
描述<BR>-name 按照文件名查找文件<BR>-perm 按照文件权限来查找文件<BR>-user&nbsp; 按照文件属主来查找文件<BR>-group 
按照文件所属的组来查找文件<BR>-mtime -n +n 按照文件的更改时间来查找文件，-n表示文件更改时间距现在n天以内，+n 
表示文件更改时间距现在n天以前。Find命令还有-atime和-ctime选项，但它们都和-mtime选项相似，所以我们在这<BR>里只介绍-mtime选项<BR>-type 
查找某一类型的文件，比如：b - 块设备文件；d - 目录；c - 字符设备文件；p - 管道文件；l - 符号链接文件；f - 普通文件<BR>-size 
n[c] 查找文件长度为n块的文件，带有c时表示文件长度以字节计<BR><BR><BR>在使用find命令的-exec选项处理匹配到的文件时， 
find命令将所有匹配到的文件一起传递给exec执行。但有些系统对能够传递给exec的命令长度有限制，这样在find命令运行几分钟之后，就会出现溢出错<BR>误。错误信息通常是“参数列太长”或“参数列溢出”。这就是xargs命令的用处所在，特别是与find命令一起使用。<BR><BR>find命令把匹配到的文件传递给xargs命令，而xargs命令每次只获取一部分文件而不是全部，不像-exec选项那样。这样它可以先处理最先获取的一部分文件，然后是下一批，并如此继续下去。<BR><BR>在有些系统中，使用-exec选项会为处理每一个匹配到的文件而发起一个相应的进程，并非将匹配到的文件全部作为参数一次执行；这样在有些情况下就会出现进程过多，系统性能下降的问题，因而效率不<BR>高；<BR><BR>而使用xargs命令则只有一个进程。另外，在使用xargs命令时，究竟是一次获取所有的参数，还是分批取得参数，以及每一次获取参数的数目都会根据该命令的选项及系统内核中相应的可调参数来确定。<BR><BR>来看看xargs命令是如何同find命令一起使用的，并给出一些例子。<BR><BR>下面的例子查找系统中的每一个普通文件，然后使用xargs命令来测试它们分别属于哪类文件<BR><BR>#find 
. -type f -print | xargs file<BR>./.kde/Autostart/Autorun.desktop: UTF-8 Unicode 
English text<BR>./.kde/Autostart/.directory:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
ISO-8859 text\<BR>......<BR>在整个系统中查找内存信息转储文件(core dump) ，然后把结果保存到/tmp/core.log 
文件中：<BR><BR>$ find / -name "core" -print | xargs echo "" 
&gt;/tmp/core.log<BR>上面这个执行太慢，我改成在当前目录下查找<BR><BR>#find . -name "file*" -print | 
xargs echo "" &gt; /temp/core.log<BR># cat 
/temp/core.log<BR>./file6<BR>在当前目录下查找所有用户具有读、写和执行权限的文件，并收回相应的写权限：<BR><BR># ls 
-l<BR>drwxrwxrwx&nbsp;&nbsp;&nbsp; 2 sam&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
adm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4096 10月 30 20:14 
file6<BR>-rwxrwxrwx&nbsp;&nbsp;&nbsp; 2 sam&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
adm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 
10月 31 01:01 http3.conf<BR>-rwxrwxrwx&nbsp;&nbsp;&nbsp; 2 
sam&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
adm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 
10月 31 01:01 httpd.conf<BR><BR># find . -perm -7 -print | xargs chmod o-w<BR># 
ls -l<BR>drwxrwxr-x&nbsp;&nbsp;&nbsp; 2 sam&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
adm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4096 10月 30 20:14 
file6<BR>-rwxrwxr-x&nbsp;&nbsp;&nbsp; 2 sam&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
adm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 
10月 31 01:01 http3.conf<BR>-rwxrwxr-x&nbsp;&nbsp;&nbsp; 2 
sam&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
adm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 
10月 31 01:01 httpd.conf<BR>用grep命令在所有的普通文件中搜索hostname这个词：<BR><BR># find . -type 
f -print | xargs grep "hostname"<BR>./httpd1.conf:#&nbsp;&nbsp;&nbsp;&nbsp; 
different IP addresses or hostnames and have them handled by 
the<BR>./httpd1.conf:# VirtualHost: If you want to maintain multiple 
domains/hostnames<BR>on your<BR>用grep命令在当前目录下的所有普通文件中搜索hostnames这个词：<BR><BR># 
find . -name \* -type f -print | xargs grep 
"hostnames"<BR>./httpd1.conf:#&nbsp;&nbsp;&nbsp;&nbsp; different IP addresses or 
hostnames and have them handled by the<BR>./httpd1.conf:# VirtualHost: If you 
want to maintain multiple domains/hostnames<BR>on your<BR>注意，在上面的例子中， 
\用来取消find命令中的*在shell中的特殊含义。<BR><BR>find命令配合使用exec和xargs可以使用户对所匹配到的文件执行几乎所有的命令。<BR>&nbsp;<BR></P>

</body>