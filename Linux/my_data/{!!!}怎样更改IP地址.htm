<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>{!!!}怎样更改IP地址</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<style>
html,body { 
	/* Default Font */
	font-family: 宋体, Arial, Helvetica, sans-serif;
	font-size: 10pt;
}
</style>

</head>

<body>
<P>  禁用并卸载NetworkManager工具:</P>
<P>chkconfig NetworkManager off<BR>chkconfig network 
on<BR>service NetworkManager stop<BR>yum erase NetworkManager<BR>  </P>
<P>重启网络服务:service network restart</P>
<P>或者使用命令:(1)system-config-network-tui<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
(2)netconfig</P>
<P>Linux 
的网络配置基本上是通过修改几个配置文件来实现的，虽然也可以用ifconfig来设置IP，用route来配置默认网关，用hostname来配置主机名，但是重启后会丢失。</P>
<P>　　下面是相关的配置文件：</P>
<P>　　/ect/hosts&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
配置"主机名和IP地址"的对应，对本机提供解析<BR>　　/etc/resolv.conf&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
配置域名（在hosts内解析不到时此域名生效）<BR>　　/etc/sysconfig/network&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
配置"hostname(本机机器名)"<BR>　　/etc/sysconfig/network-scripts/ifcfg-eth0 配置IP、Mask等网络参数</P>
<P>　　一、网卡配置<BR>　　cat /etc/sysconfig/network-scripts/ifcfg-eth0</P>
<P>　　DEVICE=eth0</P>
<P>　　ONBOOT=yes</P>
<P>　　BOOTPROTO=static</P>
<P>　　IPADDR=192.168.1.250</P>
<P>　　NETMASK=255.255.255.0</P>
<P>　　GATEWAY=192.168.76.1</P>
<P>　　ifconfig eth0 210.34.6.89 netmask 255.255.255.128 broadcast 
210.34.6.127</P>
<P>　　ifconfig eth0:0 192.168.0.253 netmask 255.255.255.0</P>
<P>　　ifconfig eth0:1 192.168.0.252 netmask 255.255.255.0</P>
<P>　　ifconfig eth0 down</P>
<P>　　ifconfig eth0 up</P>
<P>　　二、多网卡配置：<BR>　　cat /etc/sysconfig/network-scripts/ifcfg-eth0</P>
<P>　　DEVICE=eth0</P>
<P>　　BOOTPROTO=static</P>
<P>　　IPADDR=192.168.1.2</P>
<P>　　NETMASK=255.255.255.0</P>
<P>　　ONBOOT=yes</P>
<P>　　cat /etc/sysconfig/network-scripts/ifcfg-eth0</P>
<P>　　DEVICE=eth1</P>
<P>　　BOOTPROTO=static</P>
<P>　　IPADDR=222.157.4.82</P>
<P>　　NETMASK=255.255.255.128</P>
<P>　　ONBOOT=yes</P>
<P>　　vi&nbsp;&nbsp; /etc/rc.d/rc.local</P>
<P>　　route add -net 192.168.0.0/24 gw 192.168.0.254 dev eth0</P>
<P>　　route add -net 222.157.0.0/16 gw 222.157.66.1 dev eth1</P>
<P><BR>　　三、网关配置：</P>
<P>　　注意：以下用命令设置的方式设置完后需要将命令加入到 /etc/rc.d/rc.local 中，否则重启后设置被自动清除！</P>
<P>　　1、在 /etc/sysconfig/network-scripts/ifcfg-eth0 中配置；</P>
<P>　　GATEWAY=192.168.76.1</P>
<P>　　2、在 /etc/sysconfig/network 中配置：</P>
<P>　　cat /etc/sysconfig/network</P>
<P>　　NETWORKING=yes</P>
<P>　　HOSTNAME=zhaohang.com</P>
<P>　　GATEWAY=192.168.76.1</P>
<P>　　3、用命令设置：</P>
<P>　　如果只需要添加默认路由可以这样设置：</P>
<P>　　route add default gw 192.168.1.1</P>
<P>　　route del default gw 192.168.1.254 (可以删除默认路由，用此方法改变后几分钟就可以生效.)</P>
<P>　　如果两个网卡均需要网关可以这样设置：</P>
<P>　　route add -net 192.168.0.0/24 gw 192.168.0.254 dev eth0</P>
<P>　　route add -net 222.157.0.0/16 gw 222.157.66.1 dev eth1</P>
<P>　　备注：设置好路由或默认网关以后可以用命令查看：</P>
<P>　　route -n</P>
<P>　　netstat -rn</P>
<P>　　route print (For windows)</P>
<P>　　<STRONG>四、域名配置：</STRONG></P>
<P>　　cat /etc/resolv.conf</P>
<P>　　nameserver 202.96.209.5</P>
<P>　　<STRONG>五、单网卡绑定多个IP</STRONG></P>
<P>　　有时，我们需要在一块网卡上配置多个IP，我们还需要为eth0配置IP 192.168.168.2和192.168.168.3。</P>
<P>　　那么需要再在/etc/sysconfig/network-scripts/ 下新建两个配置文件：</P>
<P>　　cat /etc/sysconfig/network-scripts/ifcfg-eth0:0</P>
<P>　　DEVICE=eth0:0</P>
<P>　　BOOTPROTO=static</P>
<P>　　IPADDR=192.168.1.2</P>
<P>　　NETMASK=255.255.255.0</P>
<P>　　ONBOOT=yes</P>
<P>　　cat /etc/sysconfig/network-scripts/ifcfg-eth0:1</P>
<P>　　DEVICE=eth0:1</P>
<P>　　BOOTPROTO=static</P>
<P>　　IPADDR=192.168.1.3</P>
<P>　　NETMASK=255.255.255.0</P>
<P>　　ONBOOT=yes</P>
<P>　　<STRONG>六、多个网卡绑定成一块虚拟网卡</STRONG></P>
<P>　　为了提供网络的高可用性，我们可能需要将多块网卡绑定成一块虚拟网卡对外提供服务，这样即使其中的一块物理网卡出现故障，也不会导致连接中断。</P>
<P>　　所谓bonding，就是将多块网卡绑定同一IP地址对外提供服务，可以实现高可用或者负载均衡。当然，直接给两块网卡设置同一IP地址是不可能的。通过bonding，虚拟一块网卡对外提供连接，物理网卡<BR>的被修改为相同的MAC地址。Kernels 
2.4.12及以后的版本均提供bonding模块，以前的版本可以通过patch实现.</P>
<P>&nbsp;</P>
<P>　　比如我们可以将eth0和eth1绑定成虚拟网卡bond0:</P>
<P>　　1、首先在/etc/sysconfig/network-scripts/下创建虚拟网卡bond0的配置文件ifcfg-bond0:</P>
<P>　　cat /etc/sysconfig/network-scripts/ifcfg-bond0</P>
<P>&nbsp;&nbsp;&nbsp; 
DEVICE=bond0<BR>　　BOOTPROTO=none<BR>&nbsp;&nbsp;&nbsp; 
ONBOOT=yes<BR>　　IPADDR=192.168.168.1<BR>　　NETMASK=255.255.255.0<BR>　　GATEWAY=192.168.168.250<BR>　　TYPE=Ethernet</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;BONDING_OPTS="mode=0&nbsp;miimon=100"<BR></P>
<P>　　2、然后分别修改eth0和eth1的配置文件：</P>
<P>　　cat /etc/sysconfig/network-scripts/ifcfg-eth0</P>
<P>　　DEVICE=eth0</P>
<P>　　BOOTPROTO=none</P>
<P>　　ONBOOT=yes</P>
<P>　　MASTER=bond0</P>
<P>　　SLAVE=yes</P>
<P>　　cat /etc/sysconfig/network-scripts/ifcfg-eth1</P>
<P>　　DEVICE=eth1</P>
<P>　　BOOTPROTO=none</P>
<P>　　ONBOOT=yes</P>
<P>　　MASTER=bond0</P>
<P>　　SLAVE=yes</P>
<P> 上述如果不行,在执行下面:</P>
<P>　　3、在/etc/modules.conf 文件中添加如下内容（如果没有该文件，则新建一个）：</P>
<P>　　[因为linux的虚拟网卡是在内核模块中实现的，所以需要安装的时候已经装好该module]</P>
<P>　　alias bond0 bonding</P>
<P>　　options bond0 miimon=100 mode=1 primary=eth0</P>
<P>　　其中miimon=100表示每100ms检查一次链路连接状态，如果不通则会切换物理网卡，mode=1表示主备模式，也就是只有一块网卡是active的，只提供失效保护。如果mode=0则是负载均衡模式的，所有的网<BR>卡都是active。还有其他一些模式很少用到，primary=eth0表示主备模式下eth0为默认的active网卡。</P>
<P>　　4、最后，在/etc/rc.local中加入</P>
<P>　　modprobe bonding miimon=100 mode=1</P>
<P>　　5、重启机器后可以看到虚拟网卡已经生效，可以通过插拔两个物理网卡的网线来进行测试，不过linux中网卡接管的时间好象比较长。<BR>&nbsp;<BR></P></head>